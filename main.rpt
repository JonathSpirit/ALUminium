 
cpldfit:  version P.20131013                        Xilinx Inc.
                                  Fitter Report
Design Name: main                                Date:  8-25-2019,  6:24PM
Device Used: XC95288XL-6-TQ144
Fitting Status: Successful

*************************  Mapped Resource Summary  **************************

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
137/288 ( 48%) 929 /1440 ( 65%) 363/864 ( 42%)   24 /288 (  8%) 35 /117 ( 30%)

** Function Block Resources **

Function    Mcells      FB Inps     Pterms      IO          
Block       Used/Tot    Used/Tot    Used/Tot    Used/Tot    
FB1           1/18       45/54       25/90       1/ 8
FB2           2/18       27/54       50/90       2/10
FB3           7/18       24/54       81/90       2/ 5
FB4          16/18       25/54       54/90       1/ 6
FB5           5/18       21/54       81/90       1/ 8
FB6           6/18       16/54       82/90       6/ 8
FB7           7/18       14/54       84/90       0/ 4
FB8           7/18       16/54       82/90       5/ 5*
FB9           8/18       11/54       82/90       0/ 9
FB10         10/18       23/54       89/90      10/10*
FB11         15/18       18/54       60/90       0/ 7
FB12         18/18*      13/54       24/90       3/ 6
FB13         18/18*      15/54       22/90       0/ 6
FB14         13/18       13/54       13/90       0/ 8
FB15          2/18       42/54       50/90       2/ 9
FB16          2/18       40/54       50/90       2/ 8
             -----       -----       -----      -----    
            137/288     363/864     929/1440    35/117

* - Resource is exhausted

** Global Control Resources **

Signal 'clkNumLeft' mapped onto global clock net GCK1.
Signal 'clkNumRight' mapped onto global clock net GCK2.
Signal 'clkOpChoose' mapped onto global clock net GCK3.
Global output enable net(s) unused.
Global set/reset net(s) unused.

** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :   24          24    |  I/O              :    32     109
Output        :    8           8    |  GCK/IO           :     3       3
Bidirectional :    0           0    |  GTS/IO           :     0       4
GCK           :    3           3    |  GSR/IO           :     0       1
GTS           :    0           0    |
GSR           :    0           0    |
                 ----        ----
        Total     35          35

** Power Data **

There are 137 macrocells in high performance mode (MCHP).
There are 0 macrocells in low power mode (MCLP).
End of Mapped Resource Summary
**************************  Errors and Warnings  ***************************

WARNING:Cpld - Unable to retrieve the path to the iSE Project Repository. Will
   use the default filename of 'main.ise'.
*************************  Summary of Mapped Logic  ************************

** 8 Outputs **

Signal                                                                                           Total Total Loc     Pin  Pin     Pin     Pwr  Slew Reg Init
Name                                                                                             Pts   Inps          No.  Type    Use     Mode Rate State
result<0>                                                                                        25    45    FB1_5   20   I/O     O       STD  FAST 
result<1>                                                                                        25    20    FB2_2   9    I/O     O       STD  FAST 
result<5>                                                                                        25    26    FB2_10  14   I/O     O       STD  FAST 
result<7>                                                                                        24    22    FB4_6   4    I/O     O       STD  FAST 
result<4>                                                                                        25    26    FB15_8  81   I/O     O       STD  FAST 
result<6>                                                                                        25    32    FB15_15 87   I/O     O       STD  FAST 
result<2>                                                                                        25    31    FB16_5  93   I/O     O       STD  FAST 
result<3>                                                                                        25    29    FB16_12 98   I/O     O       STD  FAST 

** 129 Buried Nodes **

Signal                                                                                           Total Total Loc     Pwr  Reg Init
Name                                                                                             Pts   Inps          Mode State
twoComp/Madd_out__and0005/twoComp/Madd_out__and0005_D2                                           1     7     FB3_2   STD  
andNB/out_and0001/andNB/out_and0001_D2                                                           1     8     FB3_3   STD  
resultShiftL<7>/resultShiftL<7>_D2                                                               8     11    FB3_5   STD  
$OpTx$sub/Msub_out__or0006/sub/Msub_out__or0006_D2_INV$3761                                      18    17    FB3_7   STD  
add/Madd_out__or0005/add/Madd_out__or0005_D2                                                     18    17    FB3_10  STD  
resultSmaller<0>/resultSmaller<0>_D2                                                             16    21    FB3_15  STD  
$OpTx$resultBigger<0>/resultBigger<0>_D2_INV$3755                                                19    20    FB3_18  STD  
mul/Mmult_out_mult0002__and0042/mul/Mmult_out_mult0002__and0042_D2                               1     2     FB4_1   STD  
mul/Mmult_out_mult0002__and0033/mul/Mmult_out_mult0002__and0033_D2                               1     2     FB4_2   STD  
add/Madd_out__and0000/add/Madd_out__and0000_D2                                                   1     2     FB4_3   STD  
$OpTx$sub/Msub_out__or0000/sub/Msub_out__or0000_D2_INV$3758                                      1     2     FB4_4   STD  
mul/Mmult_out_mult0002__and0024/mul/Mmult_out_mult0002__and0024_D2                               1     2     FB4_8   STD  
$OpTx$$OpTx$FX_DC$2998_INV$3754                                                                  1     8     FB4_9   STD  
$OpTx$$OpTx$FX_DC$2964_INV$3750                                                                  1     4     FB4_10  STD  
$OpTx$$OpTx$FX_DC$2936_INV$3745                                                                  1     2     FB4_11  STD  
$OpTx$$OpTx$FX_DC$2911_INV$3734                                                                  1     2     FB4_12  STD  
$OpTx$$OpTx$FX_DC$2910_INV$3733                                                                  1     2     FB4_13  STD  
sub/Msub_out_Mxor_Result<7>__xor0000/sub/Msub_out_Mxor_Result<7>__xor0000_D                      2     2     FB4_14  STD  
$OpTx$FX_DC$2987                                                                                 2     8     FB4_15  STD  
$OpTx$$OpTx$FX_DC$2902_INV$3729                                                                  2     2     FB4_16  STD  
xorNB/Mxor_out_xor0000__xor0000/xorNB/Mxor_out_xor0000__xor0000_D                                5     4     FB4_17  STD  
xorNB/Mxor_out_xor0000__xor0001/xorNB/Mxor_out_xor0000__xor0001_D                                9     5     FB4_18  STD  
$OpTx$sbigger/Mcompar_out_cmp_gt0000_AGB34/sbigger/Mcompar_out_cmp_gt0000_AGB34_D2_INV$3756      24    14    FB5_4   STD  
$OpTx$$OpTx$FX_DC$2997_INV$3753                                                                  1     6     FB5_7   STD  
$OpTx$ssmaller/Mcompar_out_cmp_lt0000_ALB34/ssmaller/Mcompar_out_cmp_lt0000_ALB34_D2_INV$3757    24    14    FB5_10  STD  
sub/Msub_out__or0004/sub/Msub_out__or0004_D2                                                     24    11    FB5_15  STD  
resultShiftR<0>/resultShiftR<0>_D2                                                               8     11    FB5_17  STD  
mul/Mmult_out_mult0002_Mxor__n0002<5>__xor0000/mul/Mmult_out_mult0002_Mxor__n0002<5>__xor0000_D  16    11    FB6_4   STD  
mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D                  9     7     FB6_6   STD  
twoComp/Madd_out__and0004/twoComp/Madd_out__and0004_D2                                           1     6     FB6_8   STD  
mul/Mmult_out_mult0002_Mxor__n0002<4>__xor0000/mul/Mmult_out_mult0002_Mxor__n0002<4>__xor0000_D  23    10    FB6_10  STD  
add/Madd_out__or0004/add/Madd_out__or0004_D2                                                     17    14    FB6_15  STD  
add/Madd_out__or0003/add/Madd_out__or0003_D2                                                     16    11    FB6_18  STD  
twoComp/Madd_out__and0003/twoComp/Madd_out__and0003_D2                                           1     5     FB7_3   STD  
mul/Mmult_out_mult0002_Mxor__index0001/mul/Mmult_out_mult0002_Mxor__index0001_D                  5     5     FB7_4   STD  
mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2                                 9     7     FB7_6   STD  
$OpTx$sub/Msub_out__or0003/sub/Msub_out__or0003_D2_INV$3760                                      15    8     FB7_7   STD  
mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D                  12    9     FB7_9   STD  
mul/Mmult_out_mult0002__or0013/mul/Mmult_out_mult0002__or0013_D2                                 17    10    FB7_14  STD  
mul/Mmult_out_mult0002_Mxor__index0020/mul/Mmult_out_mult0002_Mxor__index0020_D19_               25    12    FB7_18  STD  

Signal                                                                                           Total Total Loc     Pwr  Reg Init
Name                                                                                             Pts   Inps          Mode State
mul/Mmult_out_mult0002__or0024/mul/Mmult_out_mult0002__or0024_D2                                 18    9     FB8_2   STD  
mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2                                 17    9     FB8_5   STD  
mul/Mmult_out_mult0002_Mxor__n0006<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0006<1>__xor0000_D  15    7     FB8_9   STD  
twoComp/Madd_out__and0001/twoComp/Madd_out__and0001_D2                                           1     3     FB8_11  STD  
mul/Mmult_out_mult0002_Mxor__index0018/mul/Mmult_out_mult0002_Mxor__index0018_D                  9     7     FB8_12  STD  
twoComp/Madd_out__and0002/twoComp/Madd_out__and0002_D2                                           1     4     FB8_13  STD  
mul/Mmult_out_mult0002__or0019/mul/Mmult_out_mult0002__or0019_D2                                 21    10    FB8_15  STD  
mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2                                 20    9     FB9_1   STD  
$OpTx$FX_DC$2986                                                                                 2     4     FB9_3   STD  
$OpTx$FX_DC$2961                                                                                 2     4     FB9_5   STD  
$OpTx$$OpTx$FX_DC$2914_INV$3735                                                                  2     2     FB9_6   STD  
mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D                  11    8     FB9_8   STD  
mul/Mmult_out_mult0002_Mxor__n0002<2>__xor0000/mul/Mmult_out_mult0002_Mxor__n0002<2>__xor0000_D  17    8     FB9_10  STD  
add/Madd_out__or0002/add/Madd_out__or0002_D2                                                     15    8     FB9_13  STD  
mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D                  13    9     FB9_17  STD  
mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D                  18    7     FB10_2  STD  
mul/Mmult_out_mult0002_Mxor__n0004<2>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<2>__xor0000_D  16    7     FB10_4  STD  
mul/Mmult_out_mult0002_Mxor__index0033/mul/Mmult_out_mult0002_Mxor__index0033_D                  15    8     FB10_7  STD  
mul/Mmult_out_mult0002_Mxor__index0025/mul/Mmult_out_mult0002_Mxor__index0025_D                  11    8     FB10_10 STD  
$OpTx$sub/Msub_out__or0002/sub/Msub_out__or0002_D2_INV$3759                                      7     6     FB10_12 STD  
mul/Mmult_out_mult0002_Mxor__n0008<2>__xor0000/mul/Mmult_out_mult0002_Mxor__n0008<2>__xor0000_D  7     6     FB10_14 STD  
mul/Mmult_out_mult0002_Mxor__n0004<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<1>__xor0000_D  3     4     FB10_15 STD  
mul/Mmult_out_mult0002_Mxor__n0004<3>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<3>__xor0000_D  3     4     FB10_16 STD  
$OpTx$$OpTx$FX_DC$2922_INV$3739                                                                  2     2     FB10_17 STD  
mul/Mmult_out_mult0002_Mxor__n0008<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0008<1>__xor0000_D  7     6     FB10_18 STD  
mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D                  15    6     FB11_1  STD  
mul/Mmult_out_mult0002_Mxor__n0004<4>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<4>__xor0000_D  15    6     FB11_4  STD  
$OpTx$FX_DC$3001                                                                                 7     6     FB11_6  STD  
$OpTx$$OpTx$FX_DC$2967_INV$3751                                                                  2     2     FB11_7  STD  
$OpTx$FX_DC$3002                                                                                 7     6     FB11_8  STD  
$OpTx$$OpTx$FX_DC$2968_INV$3752                                                                  2     2     FB11_9  STD  
$OpTx$FX_DC$2916                                                                                 2     3     FB11_10 STD  
$OpTx$FX_DC$2923                                                                                 2     3     FB11_11 STD  
$OpTx$FX_DC$2929                                                                                 2     3     FB11_12 STD  
$OpTx$$OpTx$FX_DC$2906_INV$3730                                                                  1     2     FB11_13 STD  
$OpTx$$OpTx$FX_DC$2920_INV$3738                                                                  1     2     FB11_14 STD  
$OpTx$$OpTx$FX_DC$2928_INV$3741                                                                  1     2     FB11_15 STD  
$OpTx$$OpTx$FX_DC$2931_INV$3742                                                                  1     2     FB11_16 STD  
$OpTx$$OpTx$FX_DC$2940_INV$3747                                                                  1     2     FB11_17 STD  
mul/Mmult_out_mult0002__and0022/mul/Mmult_out_mult0002__and0022_D2                               1     2     FB11_18 STD  

Signal                                                                                           Total Total Loc     Pwr  Reg Init
Name                                                                                             Pts   Inps          Mode State
twoComp/Madd_out__and0000/twoComp/Madd_out__and0000_D2                                           1     2     FB12_1  STD  
mul/Mmult_out_mult0002__and0060/mul/Mmult_out_mult0002__and0060_D2                               1     2     FB12_2  STD  
mul/Mmult_out_mult0002__and0051/mul/Mmult_out_mult0002__and0051_D2                               1     2     FB12_3  STD  
mul/Mmult_out_mult0002__and0014/mul/Mmult_out_mult0002__and0014_D2                               1     2     FB12_4  STD  
$OpTx$$OpTx$FX_DC$2944_INV$3749                                                                  1     2     FB12_5  STD  
$OpTx$$OpTx$FX_DC$2938_INV$3746                                                                  1     2     FB12_6  STD  
$OpTx$$OpTx$FX_DC$2935_INV$3744                                                                  1     2     FB12_7  STD  
$OpTx$$OpTx$FX_DC$2934_INV$3743                                                                  1     2     FB12_8  STD  
$OpTx$$OpTx$FX_DC$2927_INV$3740                                                                  1     2     FB12_9  STD  
$OpTx$$OpTx$FX_DC$2919_INV$3737                                                                  1     2     FB12_10 STD  
$OpTx$$OpTx$FX_DC$2917_INV$3736                                                                  1     2     FB12_11 STD  
$OpTx$$OpTx$FX_DC$2900_INV$3728                                                                  1     2     FB12_12 STD  
$OpTx$$OpTx$FX_DC$2899_INV$3727                                                                  1     2     FB12_13 STD  
sub/Msub_out_Mxor_Result<6>__xor0000/sub/Msub_out_Mxor_Result<6>__xor0000_D                      2     2     FB12_14 STD  
sub/Msub_out_Mxor_Result<5>__xor0000/sub/Msub_out_Mxor_Result<5>__xor0000_D                      2     2     FB12_15 STD  
mul/Mmult_out_mult0002_Mxor__index0012/mul/Mmult_out_mult0002_Mxor__index0012_D                  2     2     FB12_16 STD  
mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D                  2     2     FB12_17 STD  
mul/Mmult_out_mult0002_Mxor__n0010<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0010<1>__xor0000_D  3     4     FB12_18 STD  
numRightReg<2>                                                                                   1     1     FB13_1  STD  RESET
numRightReg<1>                                                                                   1     1     FB13_2  STD  RESET
numRightReg<0>                                                                                   1     1     FB13_3  STD  RESET
numLeftReg<7>                                                                                    1     1     FB13_4  STD  RESET
numLeftReg<6>                                                                                    1     1     FB13_5  STD  RESET
numLeftReg<5>                                                                                    1     1     FB13_6  STD  RESET
numLeftReg<4>                                                                                    1     1     FB13_7  STD  RESET
numLeftReg<3>                                                                                    1     1     FB13_8  STD  RESET
numLeftReg<2>                                                                                    1     1     FB13_9  STD  RESET
numLeftReg<1>                                                                                    1     1     FB13_10 STD  RESET
numLeftReg<0>                                                                                    1     1     FB13_11 STD  RESET
$OpTx$$OpTx$FX_DC$2941_INV$3748                                                                  1     2     FB13_12 STD  
$OpTx$$OpTx$FX_DC$2909_INV$3732                                                                  1     2     FB13_13 STD  
$OpTx$$OpTx$FX_DC$2908_INV$3731                                                                  1     2     FB13_14 STD  
sub/Msub_out_Mxor_Result<4>__xor0000/sub/Msub_out_Mxor_Result<4>__xor0000_D                      2     2     FB13_15 STD  
mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_            2     2     FB13_16 STD  
mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_               2     2     FB13_17 STD  
mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D                  2     2     FB13_18 STD  
opChooseReg<7>                                                                                   1     1     FB14_6  STD  RESET
opChooseReg<6>                                                                                   1     1     FB14_7  STD  RESET
opChooseReg<5>                                                                                   1     1     FB14_8  STD  RESET
opChooseReg<4>                                                                                   1     1     FB14_9  STD  RESET

Signal                                                                                           Total Total Loc     Pwr  Reg Init
Name                                                                                             Pts   Inps          Mode State
opChooseReg<3>                                                                                   1     1     FB14_10 STD  RESET
opChooseReg<2>                                                                                   1     1     FB14_11 STD  RESET
opChooseReg<1>                                                                                   1     1     FB14_12 STD  RESET
opChooseReg<0>                                                                                   1     1     FB14_13 STD  RESET
numRightReg<7>                                                                                   1     1     FB14_14 STD  RESET
numRightReg<6>                                                                                   1     1     FB14_15 STD  RESET
numRightReg<5>                                                                                   1     1     FB14_16 STD  RESET
numRightReg<4>                                                                                   1     1     FB14_17 STD  RESET
numRightReg<3>                                                                                   1     1     FB14_18 STD  RESET

** 27 Inputs **

Signal                                                                                           Loc     Pin  Pin     Pin     
Name                                                                                                     No.  Type    Use     
clkNumLeft                                                                                       FB3_10  30   GCK/I/O GCK
clkNumRight                                                                                      FB3_14  32   GCK/I/O GCK
clkOpChoose                                                                                      FB5_8   38   GCK/I/O GCK
numLeft<2>                                                                                       FB6_2   135  I/O     I
numLeft<3>                                                                                       FB6_3   136  I/O     I
numLeft<4>                                                                                       FB6_5   137  I/O     I
numLeft<5>                                                                                       FB6_6   138  I/O     I
numLeft<6>                                                                                       FB6_8   139  I/O     I
numLeft<7>                                                                                       FB6_10  140  I/O     I
numRight<5>                                                                                      FB8_2   130  I/O     I
numRight<6>                                                                                      FB8_3   131  I/O     I
numRight<7>                                                                                      FB8_5   132  I/O     I
numLeft<0>                                                                                       FB8_8   133  I/O     I
numLeft<1>                                                                                       FB8_10  134  I/O     I
opChoose<3>                                                                                      FB10_2  117  I/O     I
opChoose<4>                                                                                      FB10_3  118  I/O     I
opChoose<5>                                                                                      FB10_5  119  I/O     I
opChoose<6>                                                                                      FB10_6  120  I/O     I
opChoose<7>                                                                                      FB10_8  121  I/O     I
numRight<0>                                                                                      FB10_10 124  I/O     I
numRight<1>                                                                                      FB10_11 125  I/O     I
numRight<2>                                                                                      FB10_12 126  I/O     I
numRight<3>                                                                                      FB10_14 128  I/O     I
numRight<4>                                                                                      FB10_17 129  I/O     I
opChoose<0>                                                                                      FB12_8  113  I/O     I
opChoose<1>                                                                                      FB12_10 115  I/O     I
opChoose<2>                                                                                      FB12_12 116  I/O     I

Legend:
Pin No. - ~ - User Assigned
**************************  Function Block Details  ************************
Legend:
Total Pt     - Total product terms used by the macrocell signal
Imp Pt       - Product terms imported from other macrocells
Exp Pt       - Product terms exported to other macrocells
               in direction shown
Unused Pt    - Unused local product terms remaining in macrocell
Loc          - Location where logic was mapped in device
Pin Type/Use - I  - Input             GCK - Global Clock
               O  - Output            GTS - Global Output Enable
              (b) - Buried macrocell  GSR - Global Set/Reset
X            - Signal used as input to the macrocell logic.
Pin No.      - ~  - User Assigned
*********************************** FB1  ***********************************
Number of function block inputs used/remaining:               45/9
Number of signals used by logic mapping into function block:  45
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0     0   5     FB1_1         (b)     
(unused)              0       0     0   5     FB1_2         (b)     
(unused)              0       0   \/5   0     FB1_3         (b)     (b)
(unused)              0       0   \/5   0     FB1_4         (b)     (b)
result<0>            25      20<-   0   0     FB1_5   20    I/O     O
(unused)              0       0   /\5   0     FB1_6   21    I/O     (b)
(unused)              0       0   /\5   0     FB1_7         (b)     (b)
(unused)              0       0     0   5     FB1_8   22    I/O     
(unused)              0       0     0   5     FB1_9         (b)     
(unused)              0       0     0   5     FB1_10  23    I/O     
(unused)              0       0     0   5     FB1_11        (b)     
(unused)              0       0     0   5     FB1_12  24    I/O     
(unused)              0       0     0   5     FB1_13        (b)     
(unused)              0       0     0   5     FB1_14  25    I/O     
(unused)              0       0     0   5     FB1_15  26    I/O     
(unused)              0       0     0   5     FB1_16        (b)     
(unused)              0       0     0   5     FB1_17  27    I/O     
(unused)              0       0     0   5     FB1_18        (b)     

Signals Used by Logic in Function Block
  1: $OpTx$$OpTx$FX_DC$2899_INV$3727  16: $OpTx$$OpTx$FX_DC$2935_INV$3744                                                                31: numRightReg<0> 
  2: $OpTx$$OpTx$FX_DC$2900_INV$3728  17: $OpTx$$OpTx$FX_DC$2936_INV$3745                                                                32: numRightReg<1> 
  3: $OpTx$$OpTx$FX_DC$2902_INV$3729  18: $OpTx$$OpTx$FX_DC$2964_INV$3750                                                                33: numRightReg<2> 
  4: $OpTx$$OpTx$FX_DC$2906_INV$3730  19: $OpTx$$OpTx$FX_DC$2997_INV$3753                                                                34: opChooseReg<0> 
  5: $OpTx$$OpTx$FX_DC$2908_INV$3731  20: $OpTx$$OpTx$FX_DC$2998_INV$3754                                                                35: opChooseReg<1> 
  6: $OpTx$$OpTx$FX_DC$2909_INV$3732  21: $OpTx$FX_DC$3001                                                                               36: opChooseReg<2> 
  7: $OpTx$$OpTx$FX_DC$2910_INV$3733  22: $OpTx$FX_DC$3002                                                                               37: opChooseReg<3> 
  8: $OpTx$$OpTx$FX_DC$2911_INV$3734  23: $OpTx$resultBigger<0>/resultBigger<0>_D2_INV$3755                                              38: opChooseReg<4> 
  9: $OpTx$$OpTx$FX_DC$2914_INV$3735  24: $OpTx$sbigger/Mcompar_out_cmp_gt0000_AGB34/sbigger/Mcompar_out_cmp_gt0000_AGB34_D2_INV$3756    39: opChooseReg<5> 
 10: $OpTx$$OpTx$FX_DC$2917_INV$3736  25: $OpTx$ssmaller/Mcompar_out_cmp_lt0000_ALB34/ssmaller/Mcompar_out_cmp_lt0000_ALB34_D2_INV$3757  40: opChooseReg<6> 
 11: $OpTx$$OpTx$FX_DC$2919_INV$3737  26: andNB/out_and0001/andNB/out_and0001_D2                                                         41: opChooseReg<7> 
 12: $OpTx$$OpTx$FX_DC$2920_INV$3738  27: numLeftReg<0>                                                                                  42: resultShiftR<0>/resultShiftR<0>_D2 
 13: $OpTx$$OpTx$FX_DC$2928_INV$3741  28: numLeftReg<5>                                                                                  43: resultSmaller<0>/resultSmaller<0>_D2 
 14: $OpTx$$OpTx$FX_DC$2931_INV$3742  29: numLeftReg<6>                                                                                  44: xorNB/Mxor_out_xor0000__xor0000/xorNB/Mxor_out_xor0000__xor0000_D 
 15: $OpTx$$OpTx$FX_DC$2934_INV$3743  30: numLeftReg<7>                                                                                  45: xorNB/Mxor_out_xor0000__xor0001/xorNB/Mxor_out_xor0000__xor0001_D 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
result<0>            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX..... 45
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB2  ***********************************
Number of function block inputs used/remaining:               27/27
Number of signals used by logic mapping into function block:  27
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   \/5   0     FB2_1         (b)     (b)
result<1>            25      20<-   0   0     FB2_2   9     I/O     O
(unused)              0       0   /\5   0     FB2_3   10    I/O     (b)
(unused)              0       0   /\5   0     FB2_4         (b)     (b)
(unused)              0       0     0   5     FB2_5   11    I/O     
(unused)              0       0     0   5     FB2_6   12    I/O     
(unused)              0       0     0   5     FB2_7         (b)     
(unused)              0       0   \/5   0     FB2_8   13    I/O     (b)
(unused)              0       0   \/5   0     FB2_9         (b)     (b)
result<5>            25      20<-   0   0     FB2_10  14    I/O     O
(unused)              0       0   /\5   0     FB2_11        (b)     (b)
(unused)              0       0   /\5   0     FB2_12  15    I/O     (b)
(unused)              0       0     0   5     FB2_13        (b)     
(unused)              0       0     0   5     FB2_14  16    I/O     
(unused)              0       0     0   5     FB2_15  17    I/O     
(unused)              0       0     0   5     FB2_16        (b)     
(unused)              0       0     0   5     FB2_17  19    I/O     
(unused)              0       0   \/5   0     FB2_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$$OpTx$FX_DC$2914_INV$3735                                                  10: numLeftReg<5>     19: opChooseReg<2> 
  2: add/Madd_out__or0003/add/Madd_out__or0003_D2                                     11: numLeftReg<6>     20: opChooseReg<3> 
  3: mul/Mmult_out_mult0002_Mxor__index0025/mul/Mmult_out_mult0002_Mxor__index0025_D  12: numLeftReg<7>     21: opChooseReg<4> 
  4: mul/Mmult_out_mult0002__and0051/mul/Mmult_out_mult0002__and0051_D2               13: numRightReg<0>    22: opChooseReg<5> 
  5: numLeftReg<0>                                                                    14: numRightReg<1>    23: opChooseReg<6> 
  6: numLeftReg<1>                                                                    15: numRightReg<2>    24: opChooseReg<7> 
  7: numLeftReg<2>                                                                    16: numRightReg<5>    25: sub/Msub_out_Mxor_Result<5>__xor0000/sub/Msub_out_Mxor_Result<5>__xor0000_D 
  8: numLeftReg<3>                                                                    17: opChooseReg<0>    26: sub/Msub_out__or0004/sub/Msub_out__or0004_D2 
  9: numLeftReg<4>                                                                    18: opChooseReg<1>    27: twoComp/Madd_out__and0003/twoComp/Madd_out__and0003_D2 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
result<1>            X...XXXXXXXXXXX.XXXXXXXX................ 20
result<5>            .XXXXXXXXXXXXXXXXXXXXXXXXXX............. 26
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB3  ***********************************
Number of function block inputs used/remaining:               24/30
Number of signals used by logic mapping into function block:  24
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   /\5   0     FB3_1         (b)     (b)
twoComp/Madd_out__and0005/twoComp/Madd_out__and0005_D2
                      1       0   /\4   0     FB3_2   28    I/O     (b)
andNB/out_and0001/andNB/out_and0001_D2
                      1       0   \/1   3     FB3_3         (b)     (b)
(unused)              0       0   \/5   0     FB3_4         (b)     (b)
resultShiftL<7>/resultShiftL<7>_D2
                      8       6<- \/3   0     FB3_5         (b)     (b)
(unused)              0       0   \/5   0     FB3_6         (b)     (b)
$OpTx$sub/Msub_out__or0006/sub/Msub_out__or0006_D2_INV$3761
                     18      13<-   0   0     FB3_7         (b)     (b)
(unused)              0       0   /\5   0     FB3_8         (b)     (b)
(unused)              0       0   \/5   0     FB3_9         (b)     (b)
add/Madd_out__or0005/add/Madd_out__or0005_D2
                     18      13<-   0   0     FB3_10  30    GCK/I/O GCK
(unused)              0       0   /\5   0     FB3_11        (b)     (b)
(unused)              0       0   /\3   2     FB3_12  31    I/O     (b)
(unused)              0       0   \/1   4     FB3_13        (b)     (b)
(unused)              0       0   \/5   0     FB3_14  32    GCK/I/O GCK
resultSmaller<0>/resultSmaller<0>_D2
                     16      11<-   0   0     FB3_15  33    I/O     (b)
(unused)              0       0   /\5   0     FB3_16        (b)     (b)
(unused)              0       0   \/5   0     FB3_17        (b)     (b)
$OpTx$resultBigger<0>/resultBigger<0>_D2_INV$3755
                     19      14<-   0   0     FB3_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$$OpTx$FX_DC$2900_INV$3728   9: numLeftReg<0>     17: numRightReg<0> 
  2: $OpTx$$OpTx$FX_DC$2909_INV$3732  10: numLeftReg<1>     18: numRightReg<1> 
  3: $OpTx$$OpTx$FX_DC$2910_INV$3733  11: numLeftReg<2>     19: numRightReg<2> 
  4: $OpTx$$OpTx$FX_DC$2919_INV$3737  12: numLeftReg<3>     20: numRightReg<3> 
  5: $OpTx$$OpTx$FX_DC$2931_INV$3742  13: numLeftReg<4>     21: numRightReg<4> 
  6: $OpTx$$OpTx$FX_DC$2934_INV$3743  14: numLeftReg<5>     22: numRightReg<5> 
  7: $OpTx$$OpTx$FX_DC$2935_INV$3744  15: numLeftReg<6>     23: numRightReg<6> 
  8: $OpTx$$OpTx$FX_DC$2941_INV$3748  16: numLeftReg<7>     24: numRightReg<7> 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
twoComp/Madd_out__and0005/twoComp/Madd_out__and0005_D2 
                     ........XXXXXXX......................... 7
andNB/out_and0001/andNB/out_and0001_D2 
                     ........XXXXXXXX........................ 8
resultShiftL<7>/resultShiftL<7>_D2 
                     ........XXXXXXXXXXX..................... 11
$OpTx$sub/Msub_out__or0006/sub/Msub_out__or0006_D2_INV$3761 
                     XX.X....XXXXXXX.XXXXXXX................. 17
add/Madd_out__or0005/add/Madd_out__or0005_D2 
                     .....XXXXXXXXXX.XXXXXXX................. 17
resultSmaller<0>/resultSmaller<0>_D2 
                     XXXXX...XXXXXXXXXXXXXXXX................ 21
$OpTx$resultBigger<0>/resultBigger<0>_D2_INV$3755 
                     XXXX....XXXXXXXXXXXXXXXX................ 20
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB4  ***********************************
Number of function block inputs used/remaining:               25/29
Number of signals used by logic mapping into function block:  25
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
mul/Mmult_out_mult0002__and0042/mul/Mmult_out_mult0002__and0042_D2
                      1       0   /\4   0     FB4_1         (b)     (b)
mul/Mmult_out_mult0002__and0033/mul/Mmult_out_mult0002__and0033_D2
                      1       0     0   4     FB4_2   2     GTS/I/O (b)
add/Madd_out__and0000/add/Madd_out__and0000_D2
                      1       0   \/1   3     FB4_3         (b)     (b)
$OpTx$sub/Msub_out__or0000/sub/Msub_out__or0000_D2_INV$3758
                      1       1<- \/5   0     FB4_4         (b)     (b)
(unused)              0       0   \/5   0     FB4_5   3     GTS/I/O (b)
result<7>            24      19<-   0   0     FB4_6   4     I/O     O
(unused)              0       0   /\5   0     FB4_7         (b)     (b)
mul/Mmult_out_mult0002__and0024/mul/Mmult_out_mult0002__and0024_D2
                      1       0   /\4   0     FB4_8   5     GTS/I/O (b)
$OpTx$$OpTx$FX_DC$2998_INV$3754
                      1       0     0   4     FB4_9         (b)     (b)
$OpTx$$OpTx$FX_DC$2964_INV$3750
                      1       0     0   4     FB4_10        (b)     (b)
$OpTx$$OpTx$FX_DC$2936_INV$3745
                      1       0     0   4     FB4_11        (b)     (b)
$OpTx$$OpTx$FX_DC$2911_INV$3734
                      1       0     0   4     FB4_12  6     GTS/I/O (b)
$OpTx$$OpTx$FX_DC$2910_INV$3733
                      1       0     0   4     FB4_13        (b)     (b)
sub/Msub_out_Mxor_Result<7>__xor0000/sub/Msub_out_Mxor_Result<7>__xor0000_D
                      2       0     0   3     FB4_14  7     I/O     (b)
$OpTx$FX_DC$2987      2       0     0   3     FB4_15        (b)     (b)
$OpTx$$OpTx$FX_DC$2902_INV$3729
                      2       0     0   3     FB4_16        (b)     (b)
xorNB/Mxor_out_xor0000__xor0000/xorNB/Mxor_out_xor0000__xor0000_D
                      5       0     0   0     FB4_17        (b)     (b)
xorNB/Mxor_out_xor0000__xor0001/xorNB/Mxor_out_xor0000__xor0001_D
                      9       4<-   0   0     FB4_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$sub/Msub_out__or0006/sub/Msub_out__or0006_D2_INV$3761                                      10: numRightReg<3>    18: opChooseReg<3> 
  2: add/Madd_out__or0005/add/Madd_out__or0005_D2                                                     11: numRightReg<4>    19: opChooseReg<4> 
  3: mul/Mmult_out_mult0002_Mxor__index0033/mul/Mmult_out_mult0002_Mxor__index0033_D                  12: numRightReg<5>    20: opChooseReg<5> 
  4: mul/Mmult_out_mult0002_Mxor__n0010<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0010<1>__xor0000_D  13: numRightReg<6>    21: opChooseReg<6> 
  5: numLeftReg<0>                                                                                    14: numRightReg<7>    22: opChooseReg<7> 
  6: numLeftReg<7>                                                                                    15: opChooseReg<0>    23: resultShiftL<7>/resultShiftL<7>_D2 
  7: numRightReg<0>                                                                                   16: opChooseReg<1>    24: sub/Msub_out_Mxor_Result<7>__xor0000/sub/Msub_out_Mxor_Result<7>__xor0000_D 
  8: numRightReg<1>                                                                                   17: opChooseReg<2>    25: twoComp/Madd_out__and0005/twoComp/Madd_out__and0005_D2 
  9: numRightReg<2>                                                                                  

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
mul/Mmult_out_mult0002__and0042/mul/Mmult_out_mult0002__and0042_D2 
                     ....X.....X............................. 2
mul/Mmult_out_mult0002__and0033/mul/Mmult_out_mult0002__and0033_D2 
                     ....X....X.............................. 2
add/Madd_out__and0000/add/Madd_out__and0000_D2 
                     ....X.X................................. 2
$OpTx$sub/Msub_out__or0000/sub/Msub_out__or0000_D2_INV$3758 
                     ....X.X................................. 2
result<7>            XXXXXXXXX...XXXXXXXXXXXXX............... 22
mul/Mmult_out_mult0002__and0024/mul/Mmult_out_mult0002__and0024_D2 
                     ....X...X............................... 2
$OpTx$$OpTx$FX_DC$2998_INV$3754 
                     ......XXXXXXXX.......................... 8
$OpTx$$OpTx$FX_DC$2964_INV$3750 
                     .......XXXX............................. 4
$OpTx$$OpTx$FX_DC$2936_INV$3745 
                     ......X......X.......................... 2
$OpTx$$OpTx$FX_DC$2911_INV$3734 
                     .....X.......X.......................... 2
$OpTx$$OpTx$FX_DC$2910_INV$3733 
                     .....X.......X.......................... 2
sub/Msub_out_Mxor_Result<7>__xor0000/sub/Msub_out_Mxor_Result<7>__xor0000_D 
                     .....X.......X.......................... 2
$OpTx$FX_DC$2987     ......XXX.....XXXXX..................... 8
$OpTx$$OpTx$FX_DC$2902_INV$3729 
                     ....X.X................................. 2
xorNB/Mxor_out_xor0000__xor0000/xorNB/Mxor_out_xor0000__xor0000_D 
                     ......XXXX.............................. 4
xorNB/Mxor_out_xor0000__xor0001/xorNB/Mxor_out_xor0000__xor0001_D 
                     ....X.....XXXX.......................... 5
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB5  ***********************************
Number of function block inputs used/remaining:               21/33
Number of signals used by logic mapping into function block:  21
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   /\2   3     FB5_1         (b)     (b)
(unused)              0       0   \/5   0     FB5_2   34    I/O     (b)
(unused)              0       0   \/5   0     FB5_3         (b)     (b)
$OpTx$sbigger/Mcompar_out_cmp_gt0000_AGB34/sbigger/Mcompar_out_cmp_gt0000_AGB34_D2_INV$3756
                     24      19<-   0   0     FB5_4         (b)     (b)
(unused)              0       0   /\5   0     FB5_5   35    I/O     (b)
(unused)              0       0   /\4   1     FB5_6         (b)     (b)
$OpTx$$OpTx$FX_DC$2997_INV$3753
                      1       0     0   4     FB5_7         (b)     (b)
(unused)              0       0   \/4   1     FB5_8   38    GCK/I/O GCK
(unused)              0       0   \/5   0     FB5_9         (b)     (b)
$OpTx$ssmaller/Mcompar_out_cmp_lt0000_ALB34/ssmaller/Mcompar_out_cmp_lt0000_ALB34_D2_INV$3757
                     24      19<-   0   0     FB5_10  39    I/O     (b)
(unused)              0       0   /\5   0     FB5_11        (b)     (b)
(unused)              0       0   /\5   0     FB5_12  40    I/O     (b)
(unused)              0       0   \/5   0     FB5_13        (b)     (b)
(unused)              0       0   \/5   0     FB5_14  41    I/O     (b)
sub/Msub_out__or0004/sub/Msub_out__or0004_D2
                     24      19<-   0   0     FB5_15  43    I/O     (b)
(unused)              0       0   /\5   0     FB5_16        (b)     (b)
resultShiftR<0>/resultShiftR<0>_D2
                      8       7<- /\4   0     FB5_17  44    I/O     (b)
(unused)              0       0   /\5   0     FB5_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$$OpTx$FX_DC$2899_INV$3727   8: $OpTx$$OpTx$FX_DC$2919_INV$3737  15: numLeftReg<6> 
  2: $OpTx$$OpTx$FX_DC$2900_INV$3728   9: numLeftReg<0>                    16: numLeftReg<7> 
  3: $OpTx$$OpTx$FX_DC$2908_INV$3731  10: numLeftReg<1>                    17: numRightReg<0> 
  4: $OpTx$$OpTx$FX_DC$2909_INV$3732  11: numLeftReg<2>                    18: numRightReg<1> 
  5: $OpTx$$OpTx$FX_DC$2910_INV$3733  12: numLeftReg<3>                    19: numRightReg<2> 
  6: $OpTx$$OpTx$FX_DC$2911_INV$3734  13: numLeftReg<4>                    20: numRightReg<3> 
  7: $OpTx$$OpTx$FX_DC$2917_INV$3736  14: numLeftReg<5>                    21: numRightReg<4> 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
$OpTx$sbigger/Mcompar_out_cmp_gt0000_AGB34/sbigger/Mcompar_out_cmp_gt0000_AGB34_D2_INV$3756 
                     .X.XX..XXXXXX...XXXXX................... 14
$OpTx$$OpTx$FX_DC$2997_INV$3753 
                     ........XXXXX..X........................ 6
$OpTx$ssmaller/Mcompar_out_cmp_lt0000_ALB34/ssmaller/Mcompar_out_cmp_lt0000_ALB34_D2_INV$3757 
                     X.X..XX.XXXXX...XXXXX................... 14
sub/Msub_out__or0004/sub/Msub_out__or0004_D2 
                     ..X.....XXXXX...XXXXX................... 11
resultShiftR<0>/resultShiftR<0>_D2 
                     ........XXXXXXXXXXX..................... 11
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB6  ***********************************
Number of function block inputs used/remaining:               16/38
Number of signals used by logic mapping into function block:  16
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   /\5   0     FB6_1         (b)     (b)
(unused)              0       0   /\1   4     FB6_2   135   I/O     I
(unused)              0       0   \/5   0     FB6_3   136   I/O     I
mul/Mmult_out_mult0002_Mxor__n0002<5>__xor0000/mul/Mmult_out_mult0002_Mxor__n0002<5>__xor0000_D
                     16      11<-   0   0     FB6_4         (b)     (b)
(unused)              0       0   /\5   0     FB6_5   137   I/O     I
mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D
                      9       5<- /\1   0     FB6_6   138   I/O     I
(unused)              0       0   /\5   0     FB6_7         (b)     (b)
twoComp/Madd_out__and0004/twoComp/Madd_out__and0004_D2
                      1       0   \/4   0     FB6_8   139   I/O     I
(unused)              0       0   \/5   0     FB6_9         (b)     (b)
mul/Mmult_out_mult0002_Mxor__n0002<4>__xor0000/mul/Mmult_out_mult0002_Mxor__n0002<4>__xor0000_D
                     23      18<-   0   0     FB6_10  140   I/O     I
(unused)              0       0   /\5   0     FB6_11        (b)     (b)
(unused)              0       0   /\4   1     FB6_12        (b)     (b)
(unused)              0       0   \/2   3     FB6_13        (b)     (b)
(unused)              0       0   \/5   0     FB6_14  142   I/O     (b)
add/Madd_out__or0004/add/Madd_out__or0004_D2
                     17      12<-   0   0     FB6_15  143   GSR/I/O (b)
(unused)              0       0   /\5   0     FB6_16        (b)     (b)
(unused)              0       0   \/5   0     FB6_17        (b)     (b)
add/Madd_out__or0003/add/Madd_out__or0003_D2
                     16      11<-   0   0     FB6_18        (b)     (b)

Signals Used by Logic in Function Block
  1: $OpTx$$OpTx$FX_DC$2934_INV$3743   7: numLeftReg<4>     12: numRightReg<1> 
  2: $OpTx$$OpTx$FX_DC$2941_INV$3748   8: numLeftReg<5>     13: numRightReg<2> 
  3: numLeftReg<0>                     9: numLeftReg<6>     14: numRightReg<3> 
  4: numLeftReg<1>                    10: numLeftReg<7>     15: numRightReg<4> 
  5: numLeftReg<2>                    11: numRightReg<0>    16: numRightReg<5> 
  6: numLeftReg<3>                   

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
mul/Mmult_out_mult0002_Mxor__n0002<5>__xor0000/mul/Mmult_out_mult0002_Mxor__n0002<5>__xor0000_D 
                     ..XXXXXXXXXXX........................... 11
mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D 
                     ..XXXXX...XX............................ 7
twoComp/Madd_out__and0004/twoComp/Madd_out__and0004_D2 
                     ..XXXXXX................................ 6
mul/Mmult_out_mult0002_Mxor__n0002<4>__xor0000/mul/Mmult_out_mult0002_Mxor__n0002<4>__xor0000_D 
                     ..XXXXXXX.XXX........................... 10
add/Madd_out__or0004/add/Madd_out__or0004_D2 
                     XXXXXXXX..XXXXXX........................ 14
add/Madd_out__or0003/add/Madd_out__or0003_D2 
                     .XXXXXX...XXXXX......................... 11
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB7  ***********************************
Number of function block inputs used/remaining:               14/40
Number of signals used by logic mapping into function block:  14
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   /\5   0     FB7_1         (b)     (b)
(unused)              0       0   /\5   0     FB7_2         (b)     (b)
twoComp/Madd_out__and0003/twoComp/Madd_out__and0003_D2
                      1       0   \/3   1     FB7_3   45    I/O     (b)
mul/Mmult_out_mult0002_Mxor__index0001/mul/Mmult_out_mult0002_Mxor__index0001_D
                      5       3<- \/3   0     FB7_4         (b)     (b)
(unused)              0       0   \/5   0     FB7_5   46    I/O     (b)
mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2
                      9       8<- \/4   0     FB7_6         (b)     (b)
$OpTx$sub/Msub_out__or0003/sub/Msub_out__or0003_D2_INV$3760
                     15      10<-   0   0     FB7_7         (b)     (b)
(unused)              0       0   /\5   0     FB7_8         (b)     (b)
mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D
                     12       8<- /\1   0     FB7_9         (b)     (b)
(unused)              0       0   /\5   0     FB7_10        (b)     (b)
(unused)              0       0   /\3   2     FB7_11        (b)     (b)
(unused)              0       0   \/2   3     FB7_12  48    I/O     (b)
(unused)              0       0   \/5   0     FB7_13        (b)     (b)
mul/Mmult_out_mult0002__or0013/mul/Mmult_out_mult0002__or0013_D2
                     17      12<-   0   0     FB7_14        (b)     (b)
(unused)              0       0   /\5   0     FB7_15  49    I/O     (b)
(unused)              0       0   \/5   0     FB7_16        (b)     (b)
(unused)              0       0   \/5   0     FB7_17        (b)     (b)
mul/Mmult_out_mult0002_Mxor__index0020/mul/Mmult_out_mult0002_Mxor__index0020_D19_
                     25      20<-   0   0     FB7_18        (b)     (b)

Signals Used by Logic in Function Block
  1: mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D                   6: numLeftReg<0>     11: numRightReg<0> 
  2: mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D                   7: numLeftReg<1>     12: numRightReg<1> 
  3: mul/Mmult_out_mult0002_Mxor__index0012/mul/Mmult_out_mult0002_Mxor__index0012_D                   8: numLeftReg<2>     13: numRightReg<2> 
  4: mul/Mmult_out_mult0002_Mxor__n0004<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<1>__xor0000_D   9: numLeftReg<3>     14: numRightReg<3> 
  5: mul/Mmult_out_mult0002_Mxor__n0004<4>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<4>__xor0000_D  10: numLeftReg<4>    

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
twoComp/Madd_out__and0003/twoComp/Madd_out__and0003_D2 
                     .....XXXXX.............................. 5
mul/Mmult_out_mult0002_Mxor__index0001/mul/Mmult_out_mult0002_Mxor__index0001_D 
                     .....XXX..XX............................ 5
mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 
                     .....XXXX.XXX........................... 7
$OpTx$sub/Msub_out__or0003/sub/Msub_out__or0003_D2_INV$3760 
                     .....XXXX.XXXX.......................... 8
mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D 
                     ...X.XXXX.XXXX.......................... 9
mul/Mmult_out_mult0002__or0013/mul/Mmult_out_mult0002__or0013_D2 
                     XX...XXXX.XXXX.......................... 10
mul/Mmult_out_mult0002_Mxor__index0020/mul/Mmult_out_mult0002_Mxor__index0020_D19_ 
                     XXX.XXXXX.XXXX.......................... 12
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB8  ***********************************
Number of function block inputs used/remaining:               16/38
Number of signals used by logic mapping into function block:  16
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   \/5   0     FB8_1         (b)     (b)
mul/Mmult_out_mult0002__or0024/mul/Mmult_out_mult0002__or0024_D2
                     18      13<-   0   0     FB8_2   130   I/O     I
(unused)              0       0   /\5   0     FB8_3   131   I/O     I
(unused)              0       0   \/5   0     FB8_4         (b)     (b)
mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2
                     17      12<-   0   0     FB8_5   132   I/O     I
(unused)              0       0   /\5   0     FB8_6         (b)     (b)
(unused)              0       0   /\2   3     FB8_7         (b)     (b)
(unused)              0       0   \/5   0     FB8_8   133   I/O     I
mul/Mmult_out_mult0002_Mxor__n0006<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0006<1>__xor0000_D
                     15      10<-   0   0     FB8_9         (b)     (b)
(unused)              0       0   /\5   0     FB8_10  134   I/O     I
twoComp/Madd_out__and0001/twoComp/Madd_out__and0001_D2
                      1       0   \/4   0     FB8_11        (b)     (b)
mul/Mmult_out_mult0002_Mxor__index0018/mul/Mmult_out_mult0002_Mxor__index0018_D
                      9       4<-   0   0     FB8_12        (b)     (b)
twoComp/Madd_out__and0002/twoComp/Madd_out__and0002_D2
                      1       0   \/4   0     FB8_13        (b)     (b)
(unused)              0       0   \/5   0     FB8_14        (b)     (b)
mul/Mmult_out_mult0002__or0019/mul/Mmult_out_mult0002__or0019_D2
                     21      16<-   0   0     FB8_15        (b)     (b)
(unused)              0       0   /\5   0     FB8_16        (b)     (b)
(unused)              0       0   /\2   3     FB8_17        (b)     (b)
(unused)              0       0   \/3   2     FB8_18        (b)     (b)

Signals Used by Logic in Function Block
  1: mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D   7: mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_            12: numLeftReg<2> 
  2: mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D   8: mul/Mmult_out_mult0002_Mxor__n0004<2>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<2>__xor0000_D  13: numLeftReg<3> 
  3: mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D   9: mul/Mmult_out_mult0002_Mxor__n0006<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0006<1>__xor0000_D  14: numRightReg<3> 
  4: mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D  10: numLeftReg<0>                                                                                    15: numRightReg<4> 
  5: mul/Mmult_out_mult0002_Mxor__index0018/mul/Mmult_out_mult0002_Mxor__index0018_D  11: numLeftReg<1>                                                                                    16: numRightReg<5> 
  6: mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
mul/Mmult_out_mult0002__or0024/mul/Mmult_out_mult0002__or0024_D2 
                     ...XX.X.XXXX..XX........................ 9
mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2 
                     XXXX.....XXX.XX......................... 9
mul/Mmult_out_mult0002_Mxor__n0006<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0006<1>__xor0000_D 
                     XX.....X.XX..XX......................... 7
twoComp/Madd_out__and0001/twoComp/Madd_out__and0001_D2 
                     .........XXX............................ 3
mul/Mmult_out_mult0002_Mxor__index0018/mul/Mmult_out_mult0002_Mxor__index0018_D 
                     XXX......XXX.X.......................... 7
twoComp/Madd_out__and0002/twoComp/Madd_out__and0002_D2 
                     .........XXXX........................... 4
mul/Mmult_out_mult0002__or0019/mul/Mmult_out_mult0002__or0019_D2 
                     XXXX.X...XXX.XX......................... 10
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB9  ***********************************
Number of function block inputs used/remaining:               11/43
Number of signals used by logic mapping into function block:  11
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2
                     20      15<-   0   0     FB9_1         (b)     (b)
(unused)              0       0   /\5   0     FB9_2   50    I/O     (b)
$OpTx$FX_DC$2986      2       0   /\3   0     FB9_3   51    I/O     (b)
(unused)              0       0     0   5     FB9_4         (b)     
$OpTx$FX_DC$2961      2       0     0   3     FB9_5   52    I/O     (b)
$OpTx$$OpTx$FX_DC$2914_INV$3735
                      2       0   \/3   0     FB9_6   53    I/O     (b)
(unused)              0       0   \/5   0     FB9_7         (b)     (b)
mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D
                     11       8<- \/2   0     FB9_8   54    I/O     (b)
(unused)              0       0   \/5   0     FB9_9         (b)     (b)
mul/Mmult_out_mult0002_Mxor__n0002<2>__xor0000/mul/Mmult_out_mult0002_Mxor__n0002<2>__xor0000_D
                     17      12<-   0   0     FB9_10        (b)     (b)
(unused)              0       0   /\5   0     FB9_11  56    I/O     (b)
(unused)              0       0   \/5   0     FB9_12  57    I/O     (b)
add/Madd_out__or0002/add/Madd_out__or0002_D2
                     15      10<-   0   0     FB9_13        (b)     (b)
(unused)              0       0   /\5   0     FB9_14  58    I/O     (b)
(unused)              0       0   \/5   0     FB9_15        (b)     (b)
(unused)              0       0   \/5   0     FB9_16        (b)     (b)
mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D
                     13      10<- \/2   0     FB9_17  59    I/O     (b)
(unused)              0       0   \/5   0     FB9_18        (b)     (b)

Signals Used by Logic in Function Block
  1: numLeftReg<0>      5: numLeftReg<4>      9: numRightReg<1> 
  2: numLeftReg<1>      6: numLeftReg<5>     10: numRightReg<2> 
  3: numLeftReg<2>      7: numLeftReg<6>     11: numRightReg<3> 
  4: numLeftReg<3>      8: numRightReg<0>   

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2 
                     XXXXXX.XXX.............................. 9
$OpTx$FX_DC$2986     .X.X....XX.............................. 4
$OpTx$FX_DC$2961     ..X.X...XX.............................. 4
$OpTx$$OpTx$FX_DC$2914_INV$3735 
                     .X......X............................... 2
mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D 
                     XXXXXX.XX............................... 8
mul/Mmult_out_mult0002_Mxor__n0002<2>__xor0000/mul/Mmult_out_mult0002_Mxor__n0002<2>__xor0000_D 
                     XXXXX..XXX.............................. 8
add/Madd_out__or0002/add/Madd_out__or0002_D2 
                     XXXX...XXXX............................. 8
mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D 
                     XXXXXXXXX............................... 9
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB10 ***********************************
Number of function block inputs used/remaining:               23/31
Number of signals used by logic mapping into function block:  23
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0   \/5   0     FB10_1        (b)     (b)
mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D
                     18      13<-   0   0     FB10_2  117   I/O     I
(unused)              0       0   /\5   0     FB10_3  118   I/O     I
mul/Mmult_out_mult0002_Mxor__n0004<2>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<2>__xor0000_D
                     16      13<- /\2   0     FB10_4        (b)     (b)
(unused)              0       0   /\5   0     FB10_5  119   I/O     I
(unused)              0       0   /\5   0     FB10_6  120   I/O     I
mul/Mmult_out_mult0002_Mxor__index0033/mul/Mmult_out_mult0002_Mxor__index0033_D
                     15      13<- /\3   0     FB10_7        (b)     (b)
(unused)              0       0   /\5   0     FB10_8  121   I/O     I
(unused)              0       0   /\5   0     FB10_9        (b)     (b)
mul/Mmult_out_mult0002_Mxor__index0025/mul/Mmult_out_mult0002_Mxor__index0025_D
                     11       9<- /\3   0     FB10_10 124   I/O     I
(unused)              0       0   /\5   0     FB10_11 125   I/O     I
$OpTx$sub/Msub_out__or0002/sub/Msub_out__or0002_D2_INV$3759
                      7       6<- /\4   0     FB10_12 126   I/O     I
(unused)              0       0   /\5   0     FB10_13       (b)     (b)
mul/Mmult_out_mult0002_Mxor__n0008<2>__xor0000/mul/Mmult_out_mult0002_Mxor__n0008<2>__xor0000_D
                      7       3<- /\1   0     FB10_14 128   I/O     I
mul/Mmult_out_mult0002_Mxor__n0004<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<1>__xor0000_D
                      3       1<- /\3   0     FB10_15       (b)     (b)
mul/Mmult_out_mult0002_Mxor__n0004<3>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<3>__xor0000_D
                      3       0   /\1   1     FB10_16       (b)     (b)
$OpTx$$OpTx$FX_DC$2922_INV$3739
                      2       0   \/3   0     FB10_17 129   I/O     I
mul/Mmult_out_mult0002_Mxor__n0008<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0008<1>__xor0000_D
                      7       3<- \/1   0     FB10_18       (b)     (b)

Signals Used by Logic in Function Block
  1: mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D                   9: mul/Mmult_out_mult0002_Mxor__n0006<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0006<1>__xor0000_D  17: numLeftReg<3> 
  2: mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D                  10: mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2                                 18: numRightReg<0> 
  3: mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D                  11: mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2                                 19: numRightReg<1> 
  4: mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_               12: mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2                                 20: numRightReg<2> 
  5: mul/Mmult_out_mult0002_Mxor__index0020/mul/Mmult_out_mult0002_Mxor__index0020_D19_               13: mul/Mmult_out_mult0002__or0019/mul/Mmult_out_mult0002__or0019_D2                                 21: numRightReg<3> 
  6: mul/Mmult_out_mult0002_Mxor__index0025/mul/Mmult_out_mult0002_Mxor__index0025_D                  14: numLeftReg<0>                                                                                    22: numRightReg<4> 
  7: mul/Mmult_out_mult0002_Mxor__n0002<2>__xor0000/mul/Mmult_out_mult0002_Mxor__n0002<2>__xor0000_D  15: numLeftReg<1>                                                                                    23: numRightReg<5> 
  8: mul/Mmult_out_mult0002_Mxor__n0002<4>__xor0000/mul/Mmult_out_mult0002_Mxor__n0002<4>__xor0000_D  16: numLeftReg<2>                                                                                   

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D 
                     .............XXXXXXX.................... 7
mul/Mmult_out_mult0002_Mxor__n0004<2>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<2>__xor0000_D 
                     XX.......X.....XX..XX................... 7
mul/Mmult_out_mult0002_Mxor__index0033/mul/Mmult_out_mult0002_Mxor__index0033_D 
                     ...X.X.....X.XXX.....XX................. 8
mul/Mmult_out_mult0002_Mxor__index0025/mul/Mmult_out_mult0002_Mxor__index0025_D 
                     ..X...X.XX...XX.....XX.................. 8
$OpTx$sub/Msub_out__or0002/sub/Msub_out__or0002_D2_INV$3759 
                     .............XXX.XXX.................... 6
mul/Mmult_out_mult0002_Mxor__n0008<2>__xor0000/mul/Mmult_out_mult0002_Mxor__n0008<2>__xor0000_D 
                     ....X.......X..XX....XX................. 6
mul/Mmult_out_mult0002_Mxor__n0004<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<1>__xor0000_D 
                     ......X..X....X.....X................... 4
mul/Mmult_out_mult0002_Mxor__n0004<3>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<3>__xor0000_D 
                     .......X..X.....X...X................... 4
$OpTx$$OpTx$FX_DC$2922_INV$3739 
                     ................X...X................... 2
mul/Mmult_out_mult0002_Mxor__n0008<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0008<1>__xor0000_D 
                     ...X.......X..XX.....XX................. 6
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB11 ***********************************
Number of function block inputs used/remaining:               18/36
Number of signals used by logic mapping into function block:  18
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D
                     15      10<-   0   0     FB11_1        (b)     (b)
(unused)              0       0   /\5   0     FB11_2        (b)     (b)
(unused)              0       0   \/5   0     FB11_3  60    I/O     (b)
mul/Mmult_out_mult0002_Mxor__n0004<4>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<4>__xor0000_D
                     15      10<-   0   0     FB11_4        (b)     (b)
(unused)              0       0   /\5   0     FB11_5  61    I/O     (b)
$OpTx$FX_DC$3001      7       2<-   0   0     FB11_6        (b)     (b)
$OpTx$$OpTx$FX_DC$2967_INV$3751
                      2       0   /\2   1     FB11_7        (b)     (b)
$OpTx$FX_DC$3002      7       2<-   0   0     FB11_8        (b)     (b)
$OpTx$$OpTx$FX_DC$2968_INV$3752
                      2       0   /\2   1     FB11_9        (b)     (b)
$OpTx$FX_DC$2916      2       0     0   3     FB11_10 64    I/O     (b)
$OpTx$FX_DC$2923      2       0     0   3     FB11_11 66    I/O     (b)
$OpTx$FX_DC$2929      2       0     0   3     FB11_12 68    I/O     (b)
$OpTx$$OpTx$FX_DC$2906_INV$3730
                      1       0     0   4     FB11_13       (b)     (b)
$OpTx$$OpTx$FX_DC$2920_INV$3738
                      1       0     0   4     FB11_14 69    I/O     (b)
$OpTx$$OpTx$FX_DC$2928_INV$3741
                      1       0     0   4     FB11_15       (b)     (b)
$OpTx$$OpTx$FX_DC$2931_INV$3742
                      1       0     0   4     FB11_16       (b)     (b)
$OpTx$$OpTx$FX_DC$2940_INV$3747
                      1       0   \/1   3     FB11_17 70    I/O     (b)
mul/Mmult_out_mult0002__and0022/mul/Mmult_out_mult0002__and0022_D2
                      1       1<- \/5   0     FB11_18       (b)     (b)

Signals Used by Logic in Function Block
  1: mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D                   7: numLeftReg<2>     13: numRightReg<0> 
  2: mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D                   8: numLeftReg<3>     14: numRightReg<2> 
  3: mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D                   9: numLeftReg<4>     15: numRightReg<3> 
  4: mul/Mmult_out_mult0002_Mxor__n0002<5>__xor0000/mul/Mmult_out_mult0002_Mxor__n0002<5>__xor0000_D  10: numLeftReg<5>     16: numRightReg<5> 
  5: mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2                                 11: numLeftReg<6>     17: numRightReg<6> 
  6: mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2                                 12: numLeftReg<7>     18: numRightReg<7> 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D 
                     XX..X.XX.....X.......................... 6
mul/Mmult_out_mult0002_Mxor__n0004<4>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<4>__xor0000_D 
                     ..XX.X..X....XX......................... 6
$OpTx$FX_DC$3001     .........XXX...XXX...................... 6
$OpTx$$OpTx$FX_DC$2967_INV$3751 
                     ..........X.....X....................... 2
$OpTx$FX_DC$3002     .........XXX...XXX...................... 6
$OpTx$$OpTx$FX_DC$2968_INV$3752 
                     ......X......X.......................... 2
$OpTx$FX_DC$2916     ..........XXX........................... 3
$OpTx$FX_DC$2923     .........XX.X........................... 3
$OpTx$FX_DC$2929     ........XX..X........................... 3
$OpTx$$OpTx$FX_DC$2906_INV$3730 
                     ......X......X.......................... 2
$OpTx$$OpTx$FX_DC$2920_INV$3738 
                     ......X......X.......................... 2
$OpTx$$OpTx$FX_DC$2928_INV$3741 
                     .......X......X......................... 2
$OpTx$$OpTx$FX_DC$2931_INV$3742 
                     .......X......X......................... 2
$OpTx$$OpTx$FX_DC$2940_INV$3747 
                     ......X......X.......................... 2
mul/Mmult_out_mult0002__and0022/mul/Mmult_out_mult0002__and0022_D2 
                     ......X......X.......................... 2
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB12 ***********************************
Number of function block inputs used/remaining:               13/41
Number of signals used by logic mapping into function block:  13
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
twoComp/Madd_out__and0000/twoComp/Madd_out__and0000_D2
                      1       0     0   4     FB12_1        (b)     (b)
mul/Mmult_out_mult0002__and0060/mul/Mmult_out_mult0002__and0060_D2
                      1       0     0   4     FB12_2  110   I/O     (b)
mul/Mmult_out_mult0002__and0051/mul/Mmult_out_mult0002__and0051_D2
                      1       0     0   4     FB12_3  111   I/O     (b)
mul/Mmult_out_mult0002__and0014/mul/Mmult_out_mult0002__and0014_D2
                      1       0     0   4     FB12_4        (b)     (b)
$OpTx$$OpTx$FX_DC$2944_INV$3749
                      1       0     0   4     FB12_5  112   I/O     (b)
$OpTx$$OpTx$FX_DC$2938_INV$3746
                      1       0     0   4     FB12_6        (b)     (b)
$OpTx$$OpTx$FX_DC$2935_INV$3744
                      1       0     0   4     FB12_7        (b)     (b)
$OpTx$$OpTx$FX_DC$2934_INV$3743
                      1       0     0   4     FB12_8  113   I/O     I
$OpTx$$OpTx$FX_DC$2927_INV$3740
                      1       0     0   4     FB12_9        (b)     (b)
$OpTx$$OpTx$FX_DC$2919_INV$3737
                      1       0     0   4     FB12_10 115   I/O     I
$OpTx$$OpTx$FX_DC$2917_INV$3736
                      1       0     0   4     FB12_11       (b)     (b)
$OpTx$$OpTx$FX_DC$2900_INV$3728
                      1       0     0   4     FB12_12 116   I/O     I
$OpTx$$OpTx$FX_DC$2899_INV$3727
                      1       0     0   4     FB12_13       (b)     (b)
sub/Msub_out_Mxor_Result<6>__xor0000/sub/Msub_out_Mxor_Result<6>__xor0000_D
                      2       0     0   3     FB12_14       (b)     (b)
sub/Msub_out_Mxor_Result<5>__xor0000/sub/Msub_out_Mxor_Result<5>__xor0000_D
                      2       0     0   3     FB12_15       (b)     (b)
mul/Mmult_out_mult0002_Mxor__index0012/mul/Mmult_out_mult0002_Mxor__index0012_D
                      2       0     0   3     FB12_16       (b)     (b)
mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D
                      2       0     0   3     FB12_17       (b)     (b)
mul/Mmult_out_mult0002_Mxor__n0010<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0010<1>__xor0000_D
                      3       0     0   2     FB12_18       (b)     (b)

Signals Used by Logic in Function Block
  1: mul/Mmult_out_mult0002_Mxor__n0002<2>__xor0000/mul/Mmult_out_mult0002_Mxor__n0002<2>__xor0000_D   6: mul/Mmult_out_mult0002__or0024/mul/Mmult_out_mult0002__or0024_D2  10: numLeftReg<6> 
  2: mul/Mmult_out_mult0002_Mxor__n0002<4>__xor0000/mul/Mmult_out_mult0002_Mxor__n0002<4>__xor0000_D   7: numLeftReg<0>                                                     11: numRightReg<1> 
  3: mul/Mmult_out_mult0002_Mxor__n0008<2>__xor0000/mul/Mmult_out_mult0002_Mxor__n0008<2>__xor0000_D   8: numLeftReg<1>                                                     12: numRightReg<5> 
  4: mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2                                  9: numLeftReg<5>                                                     13: numRightReg<6> 
  5: mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2                                

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
twoComp/Madd_out__and0000/twoComp/Madd_out__and0000_D2 
                     ......XX................................ 2
mul/Mmult_out_mult0002__and0060/mul/Mmult_out_mult0002__and0060_D2 
                     ......X.....X........................... 2
mul/Mmult_out_mult0002__and0051/mul/Mmult_out_mult0002__and0051_D2 
                     ......X....X............................ 2
mul/Mmult_out_mult0002__and0014/mul/Mmult_out_mult0002__and0014_D2 
                     .......X..X............................. 2
$OpTx$$OpTx$FX_DC$2944_INV$3749 
                     .......X..X............................. 2
$OpTx$$OpTx$FX_DC$2938_INV$3746 
                     .......X..X............................. 2
$OpTx$$OpTx$FX_DC$2935_INV$3744 
                     .........X..X........................... 2
$OpTx$$OpTx$FX_DC$2934_INV$3743 
                     ........X..X............................ 2
$OpTx$$OpTx$FX_DC$2927_INV$3740 
                     .......X..X............................. 2
$OpTx$$OpTx$FX_DC$2919_INV$3737 
                     ........X..X............................ 2
$OpTx$$OpTx$FX_DC$2917_INV$3736 
                     ........X..X............................ 2
$OpTx$$OpTx$FX_DC$2900_INV$3728 
                     .........X..X........................... 2
$OpTx$$OpTx$FX_DC$2899_INV$3727 
                     .........X..X........................... 2
sub/Msub_out_Mxor_Result<6>__xor0000/sub/Msub_out_Mxor_Result<6>__xor0000_D 
                     .........X..X........................... 2
sub/Msub_out_Mxor_Result<5>__xor0000/sub/Msub_out_Mxor_Result<5>__xor0000_D 
                     ........X..X............................ 2
mul/Mmult_out_mult0002_Mxor__index0012/mul/Mmult_out_mult0002_Mxor__index0012_D 
                     .X..X................................... 2
mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D 
                     X..X.................................... 2
mul/Mmult_out_mult0002_Mxor__n0010<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0010<1>__xor0000_D 
                     ..X..X.X....X........................... 4
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB13 ***********************************
Number of function block inputs used/remaining:               15/39
Number of signals used by logic mapping into function block:  15
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
numRightReg<2>        1       0     0   4     FB13_1        (b)     (b)
numRightReg<1>        1       0     0   4     FB13_2  71    I/O     (b)
numRightReg<0>        1       0     0   4     FB13_3        (b)     (b)
numLeftReg<7>         1       0     0   4     FB13_4        (b)     (b)
numLeftReg<6>         1       0     0   4     FB13_5        (b)     (b)
numLeftReg<5>         1       0     0   4     FB13_6        (b)     (b)
numLeftReg<4>         1       0     0   4     FB13_7        (b)     (b)
numLeftReg<3>         1       0     0   4     FB13_8  74    I/O     (b)
numLeftReg<2>         1       0     0   4     FB13_9        (b)     (b)
numLeftReg<1>         1       0     0   4     FB13_10       (b)     (b)
numLeftReg<0>         1       0     0   4     FB13_11 75    I/O     (b)
$OpTx$$OpTx$FX_DC$2941_INV$3748
                      1       0     0   4     FB13_12       (b)     (b)
$OpTx$$OpTx$FX_DC$2909_INV$3732
                      1       0     0   4     FB13_13       (b)     (b)
$OpTx$$OpTx$FX_DC$2908_INV$3731
                      1       0     0   4     FB13_14 76    I/O     (b)
sub/Msub_out_Mxor_Result<4>__xor0000/sub/Msub_out_Mxor_Result<4>__xor0000_D
                      2       0     0   3     FB13_15 77    I/O     (b)
mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_
                      2       0     0   3     FB13_16       (b)     (b)
mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_
                      2       0     0   3     FB13_17 78    I/O     (b)
mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D
                      2       0     0   3     FB13_18       (b)     (b)

Signals Used by Logic in Function Block
  1: mul/Mmult_out_mult0002_Mxor__n0004<3>__xor0000/mul/Mmult_out_mult0002_Mxor__n0004<3>__xor0000_D   6: numLeft<2>        11: numLeft<7> 
  2: mul/Mmult_out_mult0002__or0013/mul/Mmult_out_mult0002__or0013_D2                                  7: numLeft<3>        12: numRightReg<4> 
  3: numLeftReg<4>                                                                                     8: numLeft<4>        13: numRight<0> 
  4: numLeft<0>                                                                                        9: numLeft<5>        14: numRight<1> 
  5: numLeft<1>                                                                                       10: numLeft<6>        15: numRight<2> 

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
numRightReg<2>       ..............X......................... 1
numRightReg<1>       .............X.......................... 1
numRightReg<0>       ............X........................... 1
numLeftReg<7>        ..........X............................. 1
numLeftReg<6>        .........X.............................. 1
numLeftReg<5>        ........X............................... 1
numLeftReg<4>        .......X................................ 1
numLeftReg<3>        ......X................................. 1
numLeftReg<2>        .....X.................................. 1
numLeftReg<1>        ....X................................... 1
numLeftReg<0>        ...X.................................... 1
$OpTx$$OpTx$FX_DC$2941_INV$3748 
                     ..X........X............................ 2
$OpTx$$OpTx$FX_DC$2909_INV$3732 
                     ..X........X............................ 2
$OpTx$$OpTx$FX_DC$2908_INV$3731 
                     ..X........X............................ 2
sub/Msub_out_Mxor_Result<4>__xor0000/sub/Msub_out_Mxor_Result<4>__xor0000_D 
                     ..X........X............................ 2
mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_ 
                     XX...................................... 2
mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_ 
                     XX...................................... 2
mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D 
                     XX...................................... 2
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB14 ***********************************
Number of function block inputs used/remaining:               13/41
Number of signals used by logic mapping into function block:  13
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0     0   5     FB14_1        (b)     
(unused)              0       0     0   5     FB14_2        (b)     
(unused)              0       0     0   5     FB14_3  100   I/O     
(unused)              0       0     0   5     FB14_4        (b)     
(unused)              0       0     0   5     FB14_5  101   I/O     
opChooseReg<7>        1       0     0   4     FB14_6  102   I/O     (b)
opChooseReg<6>        1       0     0   4     FB14_7        (b)     (b)
opChooseReg<5>        1       0     0   4     FB14_8  103   I/O     (b)
opChooseReg<4>        1       0     0   4     FB14_9        (b)     (b)
opChooseReg<3>        1       0     0   4     FB14_10 104   I/O     (b)
opChooseReg<2>        1       0     0   4     FB14_11 105   I/O     (b)
opChooseReg<1>        1       0     0   4     FB14_12       (b)     (b)
opChooseReg<0>        1       0     0   4     FB14_13       (b)     (b)
numRightReg<7>        1       0     0   4     FB14_14 106   I/O     (b)
numRightReg<6>        1       0     0   4     FB14_15 107   I/O     (b)
numRightReg<5>        1       0     0   4     FB14_16       (b)     (b)
numRightReg<4>        1       0     0   4     FB14_17       (b)     (b)
numRightReg<3>        1       0     0   4     FB14_18       (b)     (b)

Signals Used by Logic in Function Block
  1: numRight<3>        6: opChoose<0>       10: opChoose<4> 
  2: numRight<4>        7: opChoose<1>       11: opChoose<5> 
  3: numRight<5>        8: opChoose<2>       12: opChoose<6> 
  4: numRight<6>        9: opChoose<3>       13: opChoose<7> 
  5: numRight<7>      

Signal                        1         2         3         4 FB
Name                0----+----0----+----0----+----0----+----0 Inputs
opChooseReg<7>       ............X........................... 1
opChooseReg<6>       ...........X............................ 1
opChooseReg<5>       ..........X............................. 1
opChooseReg<4>       .........X.............................. 1
opChooseReg<3>       ........X............................... 1
opChooseReg<2>       .......X................................ 1
opChooseReg<1>       ......X................................. 1
opChooseReg<0>       .....X.................................. 1
numRightReg<7>       ....X................................... 1
numRightReg<6>       ...X.................................... 1
numRightReg<5>       ..X..................................... 1
numRightReg<4>       .X...................................... 1
numRightReg<3>       X....................................... 1
                    0----+----1----+----2----+----3----+----4
                              0         0         0         0
*********************************** FB15 ***********************************
Number of function block inputs used/remaining:               42/12
Number of signals used by logic mapping into function block:  42
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0     0   5     FB15_1        (b)     
(unused)              0       0     0   5     FB15_2  79    I/O     
(unused)              0       0     0   5     FB15_3  80    I/O     
(unused)              0       0     0   5     FB15_4        (b)     
(unused)              0       0     0   5     FB15_5        (b)     
(unused)              0       0   \/5   0     FB15_6        (b)     (b)
(unused)              0       0   \/5   0     FB15_7        (b)     (b)
result<4>            25      20<-   0   0     FB15_8  81    I/O     O
(unused)              0       0   /\5   0     FB15_9        (b)     (b)
(unused)              0       0   /\5   0     FB15_10 82    I/O     (b)
(unused)              0       0     0   5     FB15_11 83    I/O     
(unused)              0       0     0   5     FB15_12 85    I/O     
(unused)              0       0   \/5   0     FB15_13       (b)     (b)
(unused)              0       0   \/5   0     FB15_14 86    I/O     (b)
result<6>            25      20<-   0   0     FB15_15 87    I/O     O
(unused)              0       0   /\5   0     FB15_16       (b)     (b)
(unused)              0       0   /\5   0     FB15_17 88    I/O     (b)
(unused)              0       0     0   5     FB15_18       (b)     

Signals Used by Logic in Function Block
  1: $OpTx$$OpTx$FX_DC$2917_INV$3736                                                                  15: mul/Mmult_out_mult0002__and0051/mul/Mmult_out_mult0002__and0051_D2  29: numRightReg<6> 
  2: $OpTx$$OpTx$FX_DC$2919_INV$3737                                                                  16: mul/Mmult_out_mult0002__and0060/mul/Mmult_out_mult0002__and0060_D2  30: opChooseReg<0> 
  3: $OpTx$$OpTx$FX_DC$2935_INV$3744                                                                  17: numLeftReg<0>                                                       31: opChooseReg<1> 
  4: $OpTx$$OpTx$FX_DC$2967_INV$3751                                                                  18: numLeftReg<1>                                                       32: opChooseReg<2> 
  5: $OpTx$FX_DC$2961                                                                                 19: numLeftReg<2>                                                       33: opChooseReg<3> 
  6: $OpTx$FX_DC$2986                                                                                 20: numLeftReg<3>                                                       34: opChooseReg<4> 
  7: $OpTx$FX_DC$2987                                                                                 21: numLeftReg<4>                                                       35: opChooseReg<5> 
  8: $OpTx$sub/Msub_out__or0003/sub/Msub_out__or0003_D2_INV$3760                                      22: numLeftReg<5>                                                       36: opChooseReg<6> 
  9: add/Madd_out__or0002/add/Madd_out__or0002_D2                                                     23: numLeftReg<6>                                                       37: opChooseReg<7> 
 10: add/Madd_out__or0004/add/Madd_out__or0004_D2                                                     24: numLeftReg<7>                                                       38: sub/Msub_out_Mxor_Result<4>__xor0000/sub/Msub_out_Mxor_Result<4>__xor0000_D 
 11: mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D                  25: numRightReg<0>                                                      39: sub/Msub_out_Mxor_Result<6>__xor0000/sub/Msub_out_Mxor_Result<6>__xor0000_D 
 12: mul/Mmult_out_mult0002_Mxor__index0025/mul/Mmult_out_mult0002_Mxor__index0025_D                  26: numRightReg<1>                                                      40: sub/Msub_out__or0004/sub/Msub_out__or0004_D2 
 13: mul/Mmult_out_mult0002_Mxor__n0008<1>__xor0000/mul/Mmult_out_mult0002_Mxor__n0008<1>__xor0000_D  27: numRightReg<2>                                                      41: twoComp/Madd_out__and0002/twoComp/Madd_out__and0002_D2 
 14: mul/Mmult_out_mult0002__and0042/mul/Mmult_out_mult0002__and0042_D2                               28: numRightReg<4>                                                      42: twoComp/Madd_out__and0004/twoComp/Madd_out__and0004_D2 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
result<4>            .......XX.X..X..XXXXXXXXXXXX.XXXXXXXXX..X......... 26
result<6>            XXXXXXX..X.XX.XXXX...XXXXXX.XXXXXXXXX.XX.X........ 32
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*********************************** FB16 ***********************************
Number of function block inputs used/remaining:               40/14
Number of signals used by logic mapping into function block:  40
Signal              Total   Imp   Exp Unused  Loc     Pin   Pin     Pin
Name                Pt      Pt    Pt  Pt               #    Type    Use
(unused)              0       0     0   5     FB16_1        (b)     
(unused)              0       0     0   5     FB16_2  91    I/O     
(unused)              0       0   \/5   0     FB16_3  92    I/O     (b)
(unused)              0       0   \/5   0     FB16_4        (b)     (b)
result<2>            25      20<-   0   0     FB16_5  93    I/O     O
(unused)              0       0   /\5   0     FB16_6  94    I/O     (b)
(unused)              0       0   /\5   0     FB16_7        (b)     (b)
(unused)              0       0     0   5     FB16_8  95    I/O     
(unused)              0       0     0   5     FB16_9        (b)     
(unused)              0       0   \/5   0     FB16_10 96    I/O     (b)
(unused)              0       0   \/5   0     FB16_11 97    I/O     (b)
result<3>            25      20<-   0   0     FB16_12 98    I/O     O
(unused)              0       0   /\5   0     FB16_13       (b)     (b)
(unused)              0       0   /\5   0     FB16_14       (b)     (b)
(unused)              0       0     0   5     FB16_15       (b)     
(unused)              0       0     0   5     FB16_16       (b)     
(unused)              0       0     0   5     FB16_17       (b)     
(unused)              0       0     0   5     FB16_18       (b)     

Signals Used by Logic in Function Block
  1: $OpTx$$OpTx$FX_DC$2922_INV$3739                                                  15: mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D  28: numRightReg<1> 
  2: $OpTx$$OpTx$FX_DC$2927_INV$3740                                                  16: mul/Mmult_out_mult0002__and0014/mul/Mmult_out_mult0002__and0014_D2               29: numRightReg<2> 
  3: $OpTx$$OpTx$FX_DC$2938_INV$3746                                                  17: mul/Mmult_out_mult0002__and0022/mul/Mmult_out_mult0002__and0022_D2               30: numRightReg<3> 
  4: $OpTx$$OpTx$FX_DC$2940_INV$3747                                                  18: mul/Mmult_out_mult0002__and0024/mul/Mmult_out_mult0002__and0024_D2               31: opChooseReg<0> 
  5: $OpTx$$OpTx$FX_DC$2944_INV$3749                                                  19: mul/Mmult_out_mult0002__and0033/mul/Mmult_out_mult0002__and0033_D2               32: opChooseReg<1> 
  6: $OpTx$$OpTx$FX_DC$2968_INV$3752                                                  20: numLeftReg<0>                                                                    33: opChooseReg<2> 
  7: $OpTx$FX_DC$2916                                                                 21: numLeftReg<1>                                                                    34: opChooseReg<3> 
  8: $OpTx$FX_DC$2923                                                                 22: numLeftReg<2>                                                                    35: opChooseReg<4> 
  9: $OpTx$FX_DC$2929                                                                 23: numLeftReg<3>                                                                    36: opChooseReg<5> 
 10: $OpTx$FX_DC$2987                                                                 24: numLeftReg<4>                                                                    37: opChooseReg<6> 
 11: $OpTx$sub/Msub_out__or0000/sub/Msub_out__or0000_D2_INV$3758                      25: numLeftReg<5>                                                                    38: opChooseReg<7> 
 12: $OpTx$sub/Msub_out__or0002/sub/Msub_out__or0002_D2_INV$3759                      26: numLeftReg<7>                                                                    39: twoComp/Madd_out__and0000/twoComp/Madd_out__and0000_D2 
 13: add/Madd_out__and0000/add/Madd_out__and0000_D2                                   27: numRightReg<0>                                                                   40: twoComp/Madd_out__and0001/twoComp/Madd_out__and0001_D2 
 14: mul/Mmult_out_mult0002_Mxor__index0001/mul/Mmult_out_mult0002_Mxor__index0001_D 

Signal                        1         2         3         4         5 FB
Name                0----+----0----+----0----+----0----+----0----+----0 Inputs
result<2>            .XXXXXX.XXX.XX.XXX.XXXX.X.XXX.XXXXXXXXX........... 31
result<3>            X.XX...X...XX.XXX.XXXXXX.XXXXXXXXXXXXX.X.......... 29
                    0----+----1----+----2----+----3----+----4----+----5
                              0         0         0         0         0
*******************************  Equations  ********************************

********** Mapped Logic **********


$OpTx$$OpTx$FX_DC$2899_INV$3727 <= (NOT numLeftReg(6) AND numRightReg(6));


$OpTx$$OpTx$FX_DC$2900_INV$3728 <= (numLeftReg(6) AND NOT numRightReg(6));


$OpTx$$OpTx$FX_DC$2902_INV$3729 <= NOT (numRightReg(0)
	 XOR 
$OpTx$$OpTx$FX_DC$2902_INV$3729 <= NOT (numLeftReg(0));


$OpTx$$OpTx$FX_DC$2906_INV$3730 <= (NOT numRightReg(2) AND numLeftReg(2));


$OpTx$$OpTx$FX_DC$2908_INV$3731 <= (NOT numLeftReg(4) AND numRightReg(4));


$OpTx$$OpTx$FX_DC$2909_INV$3732 <= (numLeftReg(4) AND NOT numRightReg(4));


$OpTx$$OpTx$FX_DC$2910_INV$3733 <= (numLeftReg(7) AND NOT numRightReg(7));


$OpTx$$OpTx$FX_DC$2911_INV$3734 <= (NOT numLeftReg(7) AND numRightReg(7));


$OpTx$$OpTx$FX_DC$2914_INV$3735 <= numLeftReg(1)
	 XOR 
$OpTx$$OpTx$FX_DC$2914_INV$3735 <= numRightReg(1);


$OpTx$$OpTx$FX_DC$2917_INV$3736 <= (NOT numLeftReg(5) AND numRightReg(5));


$OpTx$$OpTx$FX_DC$2919_INV$3737 <= (numLeftReg(5) AND NOT numRightReg(5));


$OpTx$$OpTx$FX_DC$2920_INV$3738 <= (numRightReg(2) AND NOT numLeftReg(2));


$OpTx$$OpTx$FX_DC$2922_INV$3739 <= NOT (numLeftReg(3)
	 XOR 
$OpTx$$OpTx$FX_DC$2922_INV$3739 <= NOT (numRightReg(3));


$OpTx$$OpTx$FX_DC$2927_INV$3740 <= (NOT numRightReg(1) AND numLeftReg(1));


$OpTx$$OpTx$FX_DC$2928_INV$3741 <= (NOT numLeftReg(3) AND numRightReg(3));


$OpTx$$OpTx$FX_DC$2931_INV$3742 <= (numLeftReg(3) AND NOT numRightReg(3));


$OpTx$$OpTx$FX_DC$2934_INV$3743 <= (NOT numLeftReg(5) AND NOT numRightReg(5));


$OpTx$$OpTx$FX_DC$2935_INV$3744 <= (NOT numLeftReg(6) AND NOT numRightReg(6));


$OpTx$$OpTx$FX_DC$2936_INV$3745 <= (NOT numRightReg(0) AND NOT numRightReg(7));


$OpTx$$OpTx$FX_DC$2938_INV$3746 <= (NOT numRightReg(1) AND NOT numLeftReg(1));


$OpTx$$OpTx$FX_DC$2940_INV$3747 <= (NOT numRightReg(2) AND NOT numLeftReg(2));


$OpTx$$OpTx$FX_DC$2941_INV$3748 <= (NOT numLeftReg(4) AND NOT numRightReg(4));


$OpTx$$OpTx$FX_DC$2944_INV$3749 <= (numRightReg(1) AND NOT numLeftReg(1));


$OpTx$$OpTx$FX_DC$2964_INV$3750 <= (NOT numRightReg(1) AND NOT numRightReg(2) AND NOT numRightReg(4) AND 
	NOT numRightReg(3));


$OpTx$$OpTx$FX_DC$2967_INV$3751 <= NOT (numLeftReg(6)
	 XOR 
$OpTx$$OpTx$FX_DC$2967_INV$3751 <= NOT (numRightReg(6));


$OpTx$$OpTx$FX_DC$2968_INV$3752 <= NOT (numLeftReg(2)
	 XOR 
$OpTx$$OpTx$FX_DC$2968_INV$3752 <= NOT (numRightReg(2));


$OpTx$$OpTx$FX_DC$2997_INV$3753 <= (NOT numLeftReg(4) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(0) AND NOT numLeftReg(7));


$OpTx$$OpTx$FX_DC$2998_INV$3754 <= (NOT numRightReg(1) AND NOT numRightReg(0) AND NOT numRightReg(2) AND 
	NOT numRightReg(4) AND NOT numRightReg(6) AND NOT numRightReg(3) AND NOT numRightReg(5) AND 
	NOT numRightReg(7));


$OpTx$FX_DC$2916 <= ((numRightReg(0) AND numLeftReg(7))
	OR (NOT numRightReg(0) AND numLeftReg(6)));


$OpTx$FX_DC$2923 <= ((numRightReg(0) AND numLeftReg(6))
	OR (NOT numRightReg(0) AND numLeftReg(5)));


$OpTx$FX_DC$2929 <= ((numRightReg(0) AND numLeftReg(5))
	OR (NOT numRightReg(0) AND numLeftReg(4)));


$OpTx$FX_DC$2961 <= ((numRightReg(1) AND NOT numRightReg(2) AND numLeftReg(4))
	OR (NOT numRightReg(1) AND numRightReg(2) AND numLeftReg(2)));


$OpTx$FX_DC$2986 <= ((numRightReg(1) AND NOT numRightReg(2) AND numLeftReg(3))
	OR (NOT numRightReg(1) AND numRightReg(2) AND numLeftReg(1)));


$OpTx$FX_DC$2987 <= ((opChooseReg(0) AND opChooseReg(1) AND opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4))
	OR (NOT numRightReg(1) AND NOT numRightReg(0) AND NOT numRightReg(2) AND 
	NOT opChooseReg(1) AND NOT opChooseReg(2) AND opChooseReg(3) AND NOT opChooseReg(4)));


$OpTx$FX_DC$3001 <= ((numLeftReg(6) AND numLeftReg(5) AND NOT numRightReg(5) AND 
	NOT numRightReg(7))
	OR (numLeftReg(5) AND NOT numRightReg(6) AND NOT numRightReg(5) AND 
	NOT numRightReg(7))
	OR (numLeftReg(7) AND NOT numRightReg(7))
	OR (numLeftReg(6) AND numLeftReg(7) AND NOT numRightReg(6))
	OR (numLeftReg(6) AND NOT numRightReg(6) AND NOT numRightReg(7))
	OR (numLeftReg(6) AND numLeftReg(5) AND numLeftReg(7) AND 
	NOT numRightReg(5))
	OR (numLeftReg(5) AND numLeftReg(7) AND NOT numRightReg(6) AND 
	NOT numRightReg(5)));


$OpTx$FX_DC$3002 <= ((NOT numLeftReg(6) AND NOT numLeftReg(5) AND numRightReg(5) AND 
	numRightReg(7))
	OR (NOT numLeftReg(5) AND numRightReg(6) AND numRightReg(5) AND 
	numRightReg(7))
	OR (NOT numLeftReg(7) AND numRightReg(7))
	OR (NOT numLeftReg(6) AND NOT numLeftReg(7) AND numRightReg(6))
	OR (NOT numLeftReg(6) AND numRightReg(6) AND numRightReg(7))
	OR (NOT numLeftReg(6) AND NOT numLeftReg(5) AND NOT numLeftReg(7) AND 
	numRightReg(5))
	OR (NOT numLeftReg(5) AND NOT numLeftReg(7) AND numRightReg(6) AND 
	numRightReg(5)));


$OpTx$resultBigger(0)/resultBigger(0)_D2_INV$3755 <= ((
	twoComp/Madd_out__and0005/twoComp/Madd_out__and0005_D2.EXP)
	OR (numRightReg(1) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(0) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(0) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(0) AND numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(0) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(0) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(0) AND numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(2) AND NOT numLeftReg(2) AND NOT numLeftReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(2) AND NOT numLeftReg(2) AND numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(1) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(1) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(1) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (NOT numLeftReg(7) AND numRightReg(7) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733)
	OR (NOT numLeftReg(6) AND numRightReg(6) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728)
	OR (NOT numLeftReg(5) AND numRightReg(5) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (NOT numLeftReg(4) AND numRightReg(4) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (NOT numLeftReg(3) AND numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737));


$OpTx$sbigger/Mcompar_out_cmp_gt0000_AGB34/sbigger/Mcompar_out_cmp_gt0000_AGB34_D2_INV$3756 <= ((EXP44_.EXP)
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	NOT numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(1) AND numRightReg(0) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(1) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(0) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(0) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (EXP47_.EXP)
	OR (numRightReg(1) AND numRightReg(2) AND NOT numLeftReg(3) AND 
	NOT numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(1) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(1) AND NOT numLeftReg(2) AND NOT numLeftReg(3) AND 
	NOT numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(2) AND NOT numLeftReg(1) AND NOT numLeftReg(3) AND 
	NOT numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (NOT numLeftReg(1) AND NOT numLeftReg(2) AND NOT numLeftReg(3) AND 
	NOT numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (NOT numLeftReg(4) AND numRightReg(4) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (NOT numLeftReg(3) AND numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(2) AND NOT numLeftReg(2) AND NOT numLeftReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(2) AND NOT numLeftReg(2) AND numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(1) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737));


$OpTx$ssmaller/Mcompar_out_cmp_lt0000_ALB34/ssmaller/Mcompar_out_cmp_lt0000_ALB34_D2_INV$3757 <= ((EXP48_.EXP)
	OR (NOT numRightReg(1) AND NOT numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND 
	NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND 
	NOT $OpTx$$OpTx$FX_DC$2917_INV$3736)
	OR (NOT numRightReg(1) AND NOT numRightReg(0) AND numLeftReg(2) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND 
	NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND 
	NOT $OpTx$$OpTx$FX_DC$2917_INV$3736)
	OR (NOT numRightReg(1) AND NOT numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND 
	NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND 
	NOT $OpTx$$OpTx$FX_DC$2917_INV$3736)
	OR (NOT numRightReg(0) AND NOT numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND 
	NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND 
	NOT $OpTx$$OpTx$FX_DC$2917_INV$3736)
	OR (NOT numRightReg(0) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND 
	NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND 
	NOT $OpTx$$OpTx$FX_DC$2917_INV$3736)
	OR (EXP51_.EXP)
	OR (NOT numRightReg(1) AND NOT numRightReg(2) AND numLeftReg(3) AND 
	numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND 
	NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND 
	NOT $OpTx$$OpTx$FX_DC$2917_INV$3736)
	OR (NOT numRightReg(1) AND numLeftReg(1) AND numLeftReg(2) AND 
	NOT numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND 
	NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND 
	NOT $OpTx$$OpTx$FX_DC$2917_INV$3736)
	OR (NOT numRightReg(1) AND numLeftReg(2) AND numLeftReg(3) AND 
	numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND 
	NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND 
	NOT $OpTx$$OpTx$FX_DC$2917_INV$3736)
	OR (NOT numRightReg(2) AND numLeftReg(1) AND numLeftReg(3) AND 
	numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND 
	NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND 
	NOT $OpTx$$OpTx$FX_DC$2917_INV$3736)
	OR (numLeftReg(1) AND numLeftReg(2) AND numLeftReg(3) AND 
	numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND 
	NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND 
	NOT $OpTx$$OpTx$FX_DC$2917_INV$3736)
	OR (numLeftReg(4) AND NOT numRightReg(4) AND 
	NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND 
	NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND NOT $OpTx$$OpTx$FX_DC$2917_INV$3736)
	OR (numLeftReg(3) AND NOT numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND 
	NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND NOT $OpTx$$OpTx$FX_DC$2917_INV$3736)
	OR (NOT numRightReg(2) AND numLeftReg(2) AND numLeftReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND 
	NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND NOT $OpTx$$OpTx$FX_DC$2917_INV$3736)
	OR (NOT numRightReg(2) AND numLeftReg(2) AND NOT numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND 
	NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND NOT $OpTx$$OpTx$FX_DC$2917_INV$3736)
	OR (NOT numRightReg(1) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2911_INV$3734 AND 
	NOT $OpTx$$OpTx$FX_DC$2908_INV$3731 AND NOT $OpTx$$OpTx$FX_DC$2899_INV$3727 AND 
	NOT $OpTx$$OpTx$FX_DC$2917_INV$3736));


$OpTx$sub/Msub_out__or0000/sub/Msub_out__or0000_D2_INV$3758 <= (numRightReg(0) AND NOT numLeftReg(0));


$OpTx$sub/Msub_out__or0002/sub/Msub_out__or0002_D2_INV$3759 <= ((
	mul/Mmult_out_mult0002_Mxor__n0008(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0008(2)__xor0000_D.EXP)
	OR (numRightReg(1) AND numRightReg(2) AND NOT numLeftReg(1))
	OR (numRightReg(1) AND NOT numLeftReg(1) AND NOT numLeftReg(2))
	OR (numRightReg(1) AND numRightReg(0) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(0))
	OR (numRightReg(0) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(0))
	OR (numRightReg(0) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(0))
	OR (numRightReg(2) AND NOT numLeftReg(2)));


$OpTx$sub/Msub_out__or0003/sub/Msub_out__or0003_D2_INV$3760 <= ((numRightReg(1) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	numRightReg(3))
	OR (numRightReg(1) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	numRightReg(3))
	OR (numRightReg(1) AND numRightReg(0) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(0))
	OR (numRightReg(0) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(0))
	OR (
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D.EXP)
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(0))
	OR (numRightReg(1) AND numRightReg(0) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(0) AND numRightReg(3))
	OR (numRightReg(0) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(0))
	OR (numRightReg(0) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(0) AND numRightReg(3))
	OR (numRightReg(0) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(0) AND numRightReg(3))
	OR (NOT numLeftReg(3) AND numRightReg(3))
	OR (numRightReg(2) AND NOT numLeftReg(2) AND NOT numLeftReg(3))
	OR (numRightReg(2) AND NOT numLeftReg(2) AND numRightReg(3))
	OR (numRightReg(1) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(3))
	OR (numRightReg(1) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3)));


$OpTx$sub/Msub_out__or0006/sub/Msub_out__or0006_D2_INV$3761 <= ((resultShiftL(7)/resultShiftL(7)_D2.EXP)
	OR (numRightReg(2) AND NOT numLeftReg(2) AND numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(1) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(1) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(1) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(1) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(1) AND numRightReg(0) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(0) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(0) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(0) AND numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(0) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(0) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(0) AND numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (NOT numLeftReg(6) AND numRightReg(6) AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728)
	OR (NOT numLeftReg(5) AND numRightReg(5) AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (NOT numLeftReg(4) AND numRightReg(4) AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (NOT numLeftReg(3) AND numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (numRightReg(2) AND NOT numLeftReg(2) AND NOT numLeftReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737));


























































































































































































































add/Madd_out__and0000/add/Madd_out__and0000_D2 <= (numRightReg(0) AND numLeftReg(0));


add/Madd_out__or0002/add/Madd_out__or0002_D2 <= ((numRightReg(1) AND numRightReg(2) AND numLeftReg(1) AND 
	numRightReg(3))
	OR (numRightReg(1) AND numLeftReg(1) AND numLeftReg(2) AND 
	numRightReg(3))
	OR (numRightReg(1) AND numRightReg(0) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0))
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(3) AND numLeftReg(0))
	OR (numRightReg(0) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0))
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(3) AND numLeftReg(0))
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(0) AND numRightReg(3))
	OR (numRightReg(1) AND numRightReg(0) AND numLeftReg(2) AND 
	numLeftReg(0) AND numRightReg(3))
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(0) AND numRightReg(3))
	OR (numRightReg(0) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(0) AND numRightReg(3))
	OR (numLeftReg(3) AND numRightReg(3))
	OR (numRightReg(2) AND numLeftReg(2) AND numLeftReg(3))
	OR (numRightReg(2) AND numLeftReg(2) AND numRightReg(3))
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(3))
	OR (numRightReg(1) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3)));


add/Madd_out__or0003/add/Madd_out__or0003_D2 <= ((EXP57_.EXP)
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numRightReg(0) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numRightReg(0) AND numLeftReg(2) AND 
	numLeftReg(0) AND numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(0) AND numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(0) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(0) AND numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(1) AND 
	numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numLeftReg(1) AND numLeftReg(2) AND 
	numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(3) AND numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(0) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numLeftReg(4) AND numRightReg(4))
	OR (numLeftReg(3) AND numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(2) AND numLeftReg(2) AND numLeftReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(2) AND numLeftReg(2) AND numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748));


add/Madd_out__or0004/add/Madd_out__or0004_D2 <= ((EXP64_.EXP)
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(1) AND 
	numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numLeftReg(1) AND numLeftReg(2) AND 
	numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(0) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numRightReg(0) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(3) AND numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(0) AND numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(0) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(0) AND numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numLeftReg(5) AND numRightReg(5))
	OR (numLeftReg(4) AND numRightReg(4) AND 
	NOT $OpTx$$OpTx$FX_DC$2934_INV$3743)
	OR (numLeftReg(3) AND numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(2) AND numLeftReg(2) AND numLeftReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(2) AND numLeftReg(2) AND numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748));


add/Madd_out__or0005/add/Madd_out__or0005_D2 <= ((numRightReg(2) AND numLeftReg(2) AND numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2935_INV$3744 AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2935_INV$3744 AND 
	NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(1) AND 
	numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2935_INV$3744 AND 
	NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2935_INV$3744 AND 
	NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(1) AND numLeftReg(1) AND numLeftReg(2) AND 
	numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2935_INV$3744 AND 
	NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (EXP36_.EXP)
	OR (numRightReg(1) AND numRightReg(0) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2935_INV$3744 AND 
	NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(3) AND numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2935_INV$3744 AND 
	NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(0) AND numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2935_INV$3744 AND 
	NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(0) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2935_INV$3744 AND 
	NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(0) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(0) AND numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2935_INV$3744 AND 
	NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numLeftReg(6) AND numRightReg(6))
	OR (numLeftReg(5) AND numRightReg(5) AND 
	NOT $OpTx$$OpTx$FX_DC$2935_INV$3744)
	OR (numLeftReg(4) AND numRightReg(4) AND 
	NOT $OpTx$$OpTx$FX_DC$2935_INV$3744 AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743)
	OR (numLeftReg(3) AND numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2935_INV$3744 AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748)
	OR (numRightReg(2) AND numLeftReg(2) AND numLeftReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2935_INV$3744 AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743 AND 
	NOT $OpTx$$OpTx$FX_DC$2941_INV$3748));


andNB/out_and0001/andNB/out_and0001_D2 <= (NOT numLeftReg(4) AND NOT numLeftReg(6) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(2) AND NOT numLeftReg(3) AND NOT numLeftReg(0) AND NOT numLeftReg(5) AND 
	NOT numLeftReg(7));


mul/Mmult_out_mult0002_Mxor__index0001/mul/Mmult_out_mult0002_Mxor__index0001_D <= (numRightReg(1) AND numRightReg(0) AND numLeftReg(1) AND 
	numLeftReg(0))
	 XOR 
mul/Mmult_out_mult0002_Mxor__index0001/mul/Mmult_out_mult0002_Mxor__index0001_D <= ((numRightReg(1) AND numLeftReg(1) AND NOT numLeftReg(2))
	OR (NOT numRightReg(1) AND numRightReg(0) AND numLeftReg(2))
	OR (numRightReg(0) AND NOT numLeftReg(1) AND numLeftReg(2))
	OR (numRightReg(1) AND NOT numRightReg(0) AND numLeftReg(1)));


mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D <= ((numRightReg(1) AND NOT numRightReg(0) AND numLeftReg(3))
	OR (numRightReg(1) AND numLeftReg(4) AND numLeftReg(2) AND 
	numLeftReg(3))
	OR (numRightReg(1) AND numLeftReg(4) AND numLeftReg(1) AND 
	numLeftReg(3) AND numLeftReg(0))
	OR (numRightReg(1) AND NOT numLeftReg(4) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(2) AND numLeftReg(3))
	OR (numRightReg(1) AND NOT numLeftReg(4) AND NOT numLeftReg(2) AND 
	numLeftReg(3) AND NOT numLeftReg(0))
	OR (NOT numRightReg(1) AND numRightReg(0) AND numLeftReg(4))
	OR (numRightReg(0) AND numLeftReg(4) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(3))
	OR (numRightReg(0) AND numLeftReg(4) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3))
	OR (numRightReg(1) AND numRightReg(0) AND NOT numLeftReg(4) AND 
	numLeftReg(1) AND numLeftReg(2) AND NOT numLeftReg(3)));


mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D <= (($OpTx$$OpTx$FX_DC$2914_INV$3735.EXP)
	OR (numRightReg(1) AND NOT numRightReg(0) AND numLeftReg(4))
	OR (NOT numRightReg(1) AND numRightReg(0) AND numLeftReg(5))
	OR (numRightReg(1) AND numLeftReg(4) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(5))
	OR (numRightReg(0) AND NOT numLeftReg(4) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(2) AND numLeftReg(5))
	OR (numRightReg(0) AND NOT numLeftReg(4) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(0) AND numLeftReg(5))
	OR (numRightReg(0) AND NOT numLeftReg(4) AND NOT numLeftReg(3) AND 
	numLeftReg(5))
	OR (numRightReg(1) AND numRightReg(0) AND NOT numLeftReg(4) AND 
	numLeftReg(2) AND numLeftReg(3) AND NOT numLeftReg(5))
	OR (numRightReg(1) AND numRightReg(0) AND NOT numLeftReg(4) AND 
	numLeftReg(1) AND numLeftReg(3) AND numLeftReg(0) AND NOT numLeftReg(5)));


mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D <= ((EXP96_.EXP)
	OR (numRightReg(1) AND NOT numRightReg(0) AND numLeftReg(5))
	OR (NOT numRightReg(1) AND numRightReg(0) AND numLeftReg(6))
	OR (numRightReg(1) AND NOT numLeftReg(4) AND NOT numLeftReg(6) AND 
	NOT numLeftReg(3) AND numLeftReg(5))
	OR (numRightReg(0) AND numLeftReg(6) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(5))
	OR (numRightReg(0) AND numLeftReg(6) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(5))
	OR (numRightReg(0) AND NOT numLeftReg(4) AND numLeftReg(6) AND 
	NOT numLeftReg(5))
	OR (numRightReg(1) AND numRightReg(0) AND numLeftReg(4) AND 
	NOT numLeftReg(6) AND numLeftReg(3) AND NOT numLeftReg(5))
	OR (numRightReg(1) AND numRightReg(0) AND numLeftReg(4) AND 
	NOT numLeftReg(6) AND numLeftReg(1) AND numLeftReg(2) AND NOT numLeftReg(5)));


mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D <= ((
	mul/Mmult_out_mult0002_Mxor__n0008(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0008(1)__xor0000_D.EXP)
	OR (numRightReg(1) AND NOT numRightReg(0) AND numLeftReg(2) AND 
	numLeftReg(0))
	OR (NOT numRightReg(1) AND numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(3))
	OR (NOT numRightReg(1) AND NOT numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(1))
	OR (numRightReg(1) AND NOT numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(2) AND numLeftReg(3))
	OR (NOT numRightReg(1) AND numRightReg(2) AND numLeftReg(1) AND 
	NOT numLeftReg(2) AND NOT numLeftReg(3))
	OR (
	mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D.EXP)
	OR (numRightReg(1) AND NOT numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(2))
	OR (numRightReg(1) AND NOT numRightReg(0) AND NOT numLeftReg(1) AND 
	numLeftReg(2))
	OR (numRightReg(0) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	numLeftReg(3))
	OR (numRightReg(1) AND NOT numRightReg(2) AND NOT numLeftReg(1) AND 
	numLeftReg(2) AND NOT numLeftReg(3))
	OR (NOT numRightReg(1) AND numRightReg(0) AND NOT numLeftReg(1) AND 
	numLeftReg(3) AND NOT numLeftReg(0))
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(3) AND numLeftReg(0))
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(0))
	OR (numRightReg(0) AND NOT numRightReg(2) AND NOT numLeftReg(2) AND 
	numLeftReg(3) AND NOT numLeftReg(0))
	OR (numRightReg(0) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0))
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(2) AND NOT numLeftReg(3) AND NOT numLeftReg(0)));


mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D <= mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000_D
	 XOR 
mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D <= mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2;


mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D <= ((numRightReg(2) AND numLeftReg(2) AND numLeftReg(3) AND 
	mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (numRightReg(2) AND numLeftReg(2) AND NOT numLeftReg(3) AND 
	mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (numRightReg(2) AND numLeftReg(2) AND NOT numLeftReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (numRightReg(2) AND NOT numLeftReg(2) AND numLeftReg(3) AND 
	NOT mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (numRightReg(2) AND NOT numLeftReg(2) AND numLeftReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (NOT numLeftReg(2) AND NOT numLeftReg(3) AND 
	NOT mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (NOT numLeftReg(2) AND NOT numLeftReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (numRightReg(2) AND numLeftReg(2) AND numLeftReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (numRightReg(2) AND numLeftReg(3) AND 
	mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (numRightReg(2) AND numLeftReg(3) AND 
	NOT mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (NOT numRightReg(2) AND 
	NOT mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (NOT numRightReg(2) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (NOT numRightReg(2) AND 
	mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (NOT numLeftReg(3) AND 
	mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (NOT numLeftReg(3) AND 
	NOT mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D));


mul/Mmult_out_mult0002_Mxor__index0012/mul/Mmult_out_mult0002_Mxor__index0012_D <= mul/Mmult_out_mult0002_Mxor__n0002(4)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(4)__xor0000_D
	 XOR 
mul/Mmult_out_mult0002_Mxor__index0012/mul/Mmult_out_mult0002_Mxor__index0012_D <= mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2;


mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D <= mul/Mmult_out_mult0002_Mxor__n0004(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(1)__xor0000_D
	 XOR 
mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D <= ((EXP73_.EXP)
	OR (numRightReg(1) AND NOT numRightReg(0) AND numLeftReg(2) AND 
	numLeftReg(0) AND numRightReg(3))
	OR (NOT numRightReg(1) AND NOT numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(1) AND numLeftReg(0) AND numRightReg(3))
	OR (numRightReg(2) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND numRightReg(3))
	OR (NOT numRightReg(1) AND numRightReg(2) AND numLeftReg(1) AND 
	NOT numLeftReg(2) AND NOT numLeftReg(3) AND numLeftReg(0) AND numRightReg(3))
	OR (numRightReg(1) AND numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(1) AND NOT numLeftReg(2) AND NOT numLeftReg(3) AND numLeftReg(0) AND 
	numRightReg(3))
	OR (NOT numRightReg(1) AND numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND numRightReg(3))
	OR (numRightReg(0) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND numRightReg(3))
	OR (NOT numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	NOT numLeftReg(1) AND numLeftReg(2) AND NOT numLeftReg(3) AND numLeftReg(0) AND 
	numRightReg(3)));


mul/Mmult_out_mult0002_Mxor__index0018/mul/Mmult_out_mult0002_Mxor__index0018_D <= mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D
	 XOR 
mul/Mmult_out_mult0002_Mxor__index0018/mul/Mmult_out_mult0002_Mxor__index0018_D <= ((NOT numLeftReg(1) AND numLeftReg(2) AND NOT numLeftReg(0) AND 
	numRightReg(3))
	OR (NOT numLeftReg(1) AND numLeftReg(2) AND numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D)
	OR (NOT numLeftReg(1) AND numLeftReg(2) AND numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D)
	OR (numLeftReg(2) AND numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D)
	OR (numLeftReg(1) AND NOT numLeftReg(2) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D)
	OR (numLeftReg(2) AND NOT numLeftReg(0) AND numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D)
	OR (numLeftReg(1) AND NOT numLeftReg(2) AND numLeftReg(0) AND 
	numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D)
	OR (NOT numLeftReg(2) AND numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D));


mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D <= mul/Mmult_out_mult0002_Mxor__n0004(3)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(3)__xor0000_D
	 XOR 
mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D <= mul/Mmult_out_mult0002__or0013/mul/Mmult_out_mult0002__or0013_D2;


mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_ <= mul/Mmult_out_mult0002_Mxor__n0004(3)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(3)__xor0000_D
	 XOR 
mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_ <= mul/Mmult_out_mult0002__or0013/mul/Mmult_out_mult0002__or0013_D2;


mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_ <= mul/Mmult_out_mult0002_Mxor__n0004(3)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(3)__xor0000_D
	 XOR 
mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_ <= mul/Mmult_out_mult0002__or0013/mul/Mmult_out_mult0002__or0013_D2;


mul/Mmult_out_mult0002_Mxor__index0020/mul/Mmult_out_mult0002_Mxor__index0020_D19_ <= mul/Mmult_out_mult0002_Mxor__n0004(4)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(4)__xor0000_D
	 XOR 
mul/Mmult_out_mult0002_Mxor__index0020/mul/Mmult_out_mult0002_Mxor__index0020_D19_ <= ((EXP69_.EXP)
	OR (numLeftReg(3) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0012/mul/Mmult_out_mult0002_Mxor__index0012_D)
	OR (numLeftReg(2) AND numLeftReg(3) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(2) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D AND 
	mul/Mmult_out_mult0002_Mxor__index0012/mul/Mmult_out_mult0002_Mxor__index0012_D)
	OR (numLeftReg(1) AND numLeftReg(3) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(1) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D AND 
	mul/Mmult_out_mult0002_Mxor__index0012/mul/Mmult_out_mult0002_Mxor__index0012_D)
	OR (EXP77_.EXP)
	OR (numRightReg(1) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND numRightReg(3))
	OR (numRightReg(0) AND numLeftReg(3) AND numLeftReg(0) AND 
	numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (NOT numRightReg(1) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D AND 
	mul/Mmult_out_mult0002_Mxor__index0012/mul/Mmult_out_mult0002_Mxor__index0012_D)
	OR (NOT numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(2) AND numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0012/mul/Mmult_out_mult0002_Mxor__index0012_D)
	OR (NOT numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(2) AND numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0012/mul/Mmult_out_mult0002_Mxor__index0012_D)
	OR (numRightReg(2) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND numRightReg(3))
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D)
	OR (numRightReg(1) AND NOT numRightReg(2) AND numLeftReg(2) AND 
	numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0012/mul/Mmult_out_mult0002_Mxor__index0012_D)
	OR (numRightReg(1) AND numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(1) AND numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D AND 
	mul/Mmult_out_mult0002_Mxor__index0012/mul/Mmult_out_mult0002_Mxor__index0012_D));


mul/Mmult_out_mult0002_Mxor__index0025/mul/Mmult_out_mult0002_Mxor__index0025_D <= mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000_D
	 XOR 
mul/Mmult_out_mult0002_Mxor__index0025/mul/Mmult_out_mult0002_Mxor__index0025_D <= ((
	$OpTx$sub/Msub_out__or0002/sub/Msub_out__or0002_D2_INV$3759.EXP)
	OR (numLeftReg(0) AND numRightReg(4) AND NOT numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000_D AND 
	NOT mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2)
	OR (numLeftReg(1) AND numLeftReg(0) AND numRightReg(4) AND 
	mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000_D AND 
	NOT mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2)
	OR (numLeftReg(1) AND numLeftReg(0) AND numRightReg(4) AND 
	mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000_D AND 
	mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2)
	OR (NOT numLeftReg(1) AND numLeftReg(0) AND numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000_D AND 
	NOT mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2)
	OR (NOT numLeftReg(1) AND numLeftReg(0) AND numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000_D AND 
	mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2)
	OR (numLeftReg(0) AND numRightReg(4) AND NOT numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000_D AND 
	mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2));


mul/Mmult_out_mult0002_Mxor__index0033/mul/Mmult_out_mult0002_Mxor__index0033_D <= (numLeftReg(2) AND numRightReg(4))
	 XOR 
mul/Mmult_out_mult0002_Mxor__index0033/mul/Mmult_out_mult0002_Mxor__index0033_D <= ((EXP104_.EXP)
	OR (NOT numRightReg(5) AND 
	NOT mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_)
	OR (NOT numLeftReg(1) AND NOT numLeftReg(0) AND 
	mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_)
	OR (NOT numLeftReg(1) AND NOT numLeftReg(0) AND 
	NOT mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_)
	OR (NOT numLeftReg(1) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0025/mul/Mmult_out_mult0002_Mxor__index0025_D AND 
	mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_)
	OR (NOT numLeftReg(1) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0025/mul/Mmult_out_mult0002_Mxor__index0025_D AND 
	NOT mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_)
	OR (NOT numRightReg(5) AND 
	mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_));


mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000_D <= ((
	mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D.EXP)
	OR (numRightReg(1) AND NOT numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(3))
	OR (numRightReg(1) AND NOT numRightReg(0) AND NOT numLeftReg(2) AND 
	numLeftReg(3))
	OR (NOT numRightReg(1) AND NOT numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(2))
	OR (NOT numRightReg(0) AND numRightReg(2) AND numLeftReg(2) AND 
	NOT numLeftReg(3))
	OR (numRightReg(1) AND NOT numRightReg(2) AND numLeftReg(4) AND 
	numLeftReg(2) AND numLeftReg(3))
	OR (NOT numRightReg(1) AND numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(4))
	OR (NOT numRightReg(1) AND numRightReg(0) AND numLeftReg(4) AND 
	NOT numLeftReg(2))
	OR (NOT numRightReg(1) AND numRightReg(2) AND NOT numLeftReg(4) AND 
	numLeftReg(2))
	OR (numRightReg(0) AND numLeftReg(4) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3))
	OR (numRightReg(1) AND NOT numLeftReg(4) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(2) AND numLeftReg(3))
	OR (numRightReg(0) AND numRightReg(2) AND NOT numLeftReg(4) AND 
	NOT numLeftReg(1) AND numLeftReg(2))
	OR (numRightReg(0) AND numRightReg(2) AND NOT numLeftReg(4) AND 
	numLeftReg(2) AND numLeftReg(3))
	OR (numRightReg(0) AND NOT numRightReg(2) AND numLeftReg(4) AND 
	NOT numLeftReg(1) AND numLeftReg(2))
	OR (numRightReg(0) AND numLeftReg(4) AND numLeftReg(1) AND 
	NOT numLeftReg(2) AND numLeftReg(0))
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(4) AND 
	numLeftReg(1) AND numLeftReg(2) AND NOT numLeftReg(3)));


mul/Mmult_out_mult0002_Mxor__n0002(4)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(4)__xor0000_D <= ((
	twoComp/Madd_out__and0004/twoComp/Madd_out__and0004_D2.EXP)
	OR (numRightReg(1) AND NOT numRightReg(2) AND numLeftReg(4) AND 
	numLeftReg(6) AND numLeftReg(5))
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(4) AND 
	NOT numLeftReg(6) AND numLeftReg(5))
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(4) AND 
	numLeftReg(6) AND numLeftReg(3) AND NOT numLeftReg(5))
	OR (numRightReg(0) AND NOT numRightReg(2) AND numLeftReg(6) AND 
	NOT numLeftReg(1) AND NOT numLeftReg(3) AND NOT numLeftReg(5))
	OR (numRightReg(2) AND numLeftReg(4) AND NOT numLeftReg(6) AND 
	NOT numLeftReg(1) AND NOT numLeftReg(3) AND NOT numLeftReg(5))
	OR (EXP63_.EXP)
	OR (numRightReg(1) AND NOT numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(5))
	OR (numRightReg(1) AND NOT numRightReg(0) AND NOT numLeftReg(4) AND 
	numLeftReg(5))
	OR (NOT numRightReg(1) AND numRightReg(0) AND NOT numLeftReg(4) AND 
	numLeftReg(6))
	OR (NOT numRightReg(1) AND NOT numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(4))
	OR (NOT numRightReg(0) AND numRightReg(2) AND numLeftReg(4) AND 
	NOT numLeftReg(5))
	OR (numRightReg(0) AND NOT numLeftReg(4) AND numLeftReg(6) AND 
	numLeftReg(2) AND numLeftReg(3))
	OR (numRightReg(0) AND NOT numRightReg(2) AND numLeftReg(6) AND 
	NOT numLeftReg(2) AND NOT numLeftReg(3) AND NOT numLeftReg(5))
	OR (numRightReg(0) AND NOT numLeftReg(4) AND numLeftReg(6) AND 
	numLeftReg(1) AND numLeftReg(3) AND numLeftReg(0))
	OR (numRightReg(2) AND numLeftReg(4) AND NOT numLeftReg(6) AND 
	NOT numLeftReg(2) AND NOT numLeftReg(3) AND NOT numLeftReg(5))
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(4) AND 
	numLeftReg(6) AND numLeftReg(1) AND numLeftReg(2) AND NOT numLeftReg(5)));


mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D <= (numRightReg(2) AND numLeftReg(5))
	 XOR 
mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D <= ((numRightReg(1) AND NOT numRightReg(0) AND numLeftReg(6))
	OR (numRightReg(0) AND NOT numLeftReg(6) AND NOT numLeftReg(5) AND 
	numLeftReg(7))
	OR (numRightReg(0) AND NOT numLeftReg(4) AND NOT numLeftReg(6) AND 
	NOT numLeftReg(3) AND numLeftReg(7))
	OR (numRightReg(0) AND NOT numLeftReg(4) AND NOT numLeftReg(6) AND 
	NOT numLeftReg(1) AND NOT numLeftReg(2) AND numLeftReg(7))
	OR (numRightReg(0) AND NOT numLeftReg(4) AND NOT numLeftReg(6) AND 
	NOT numLeftReg(2) AND NOT numLeftReg(0) AND numLeftReg(7))
	OR (
	mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D.EXP)
	OR (numRightReg(1) AND numLeftReg(6) AND numLeftReg(5) AND 
	numLeftReg(7))
	OR (numRightReg(1) AND numLeftReg(4) AND numLeftReg(6) AND 
	numLeftReg(3) AND numLeftReg(7))
	OR (numRightReg(1) AND NOT numLeftReg(4) AND numLeftReg(6) AND 
	NOT numLeftReg(5) AND NOT numLeftReg(7))
	OR (numRightReg(1) AND numLeftReg(6) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(5) AND NOT numLeftReg(7))
	OR (numRightReg(1) AND numLeftReg(6) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(5) AND NOT numLeftReg(7))
	OR (NOT numRightReg(1) AND numRightReg(0) AND numLeftReg(7))
	OR (numRightReg(1) AND numRightReg(0) AND numLeftReg(4) AND 
	NOT numLeftReg(6) AND numLeftReg(5) AND NOT numLeftReg(7))
	OR (numRightReg(1) AND numRightReg(0) AND NOT numLeftReg(6) AND 
	numLeftReg(2) AND numLeftReg(3) AND numLeftReg(5) AND NOT numLeftReg(7))
	OR (numRightReg(1) AND numRightReg(0) AND NOT numLeftReg(6) AND 
	numLeftReg(1) AND numLeftReg(3) AND numLeftReg(0) AND numLeftReg(5) AND 
	NOT numLeftReg(7)));


mul/Mmult_out_mult0002_Mxor__n0004(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(1)__xor0000_D <= (numLeftReg(1) AND numRightReg(3))
	 XOR 
mul/Mmult_out_mult0002_Mxor__n0004(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(1)__xor0000_D <= ((
	NOT mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000_D AND 
	mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2)
	OR (
	mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(2)__xor0000_D AND 
	NOT mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2));


mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D <= (numLeftReg(2) AND numRightReg(3))
	 XOR 
mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D <= ((EXP102_.EXP)
	OR (NOT numRightReg(2) AND 
	mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (NOT numLeftReg(2) AND NOT numLeftReg(3) AND 
	NOT mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (NOT numLeftReg(2) AND NOT numLeftReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (NOT numLeftReg(3) AND 
	mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (NOT numLeftReg(3) AND 
	NOT mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (NOT numRightReg(2) AND 
	NOT mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D)
	OR (NOT numRightReg(2) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0003/mul/Mmult_out_mult0002_Mxor__index0003_D AND 
	mul/Mmult_out_mult0002_Mxor__index0004/mul/Mmult_out_mult0002_Mxor__index0004_D));


mul/Mmult_out_mult0002_Mxor__n0004(3)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(3)__xor0000_D <= (numLeftReg(3) AND numRightReg(3))
	 XOR 
mul/Mmult_out_mult0002_Mxor__n0004(3)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(3)__xor0000_D <= ((
	mul/Mmult_out_mult0002_Mxor__n0002(4)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(4)__xor0000_D AND 
	NOT mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2)
	OR (
	NOT mul/Mmult_out_mult0002_Mxor__n0002(4)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(4)__xor0000_D AND 
	mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2));


mul/Mmult_out_mult0002_Mxor__n0004(4)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(4)__xor0000_D <= ((NOT numRightReg(2) AND NOT numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2 AND 
	mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D)
	OR (NOT numRightReg(2) AND NOT numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D AND 
	mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D)
	OR (numRightReg(2) AND numLeftReg(4) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D AND 
	mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D)
	OR (numLeftReg(4) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D AND 
	mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D)
	OR (numLeftReg(4) AND numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D)
	OR (numRightReg(2) AND numLeftReg(4) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2 AND 
	mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D)
	OR (numRightReg(2) AND numLeftReg(4) AND NOT numRightReg(3) AND 
	mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D)
	OR (numRightReg(2) AND numLeftReg(4) AND NOT numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D)
	OR (NOT numRightReg(2) AND numLeftReg(4) AND numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D)
	OR (NOT numRightReg(2) AND numLeftReg(4) AND numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D)
	OR (NOT numLeftReg(4) AND 
	NOT mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2 AND 
	mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D)
	OR (NOT numLeftReg(4) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D AND 
	mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D)
	OR (NOT numLeftReg(4) AND 
	mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D)
	OR (NOT numRightReg(3) AND 
	mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D)
	OR (NOT numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D AND 
	mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000/mul/Mmult_out_mult0002_Mxor__n0002(5)__xor0000_D));


mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000_D <= ((NOT numLeftReg(1) AND NOT numLeftReg(0) AND 
	mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D)
	OR (NOT numRightReg(4) AND NOT numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D)
	OR (numLeftReg(1) AND numRightReg(4) AND NOT numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D)
	OR (NOT numLeftReg(0) AND NOT numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D)
	OR (NOT numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D)
	OR (numLeftReg(1) AND NOT numLeftReg(0) AND numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D)
	OR (numLeftReg(1) AND numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D)
	OR (numLeftReg(1) AND NOT numRightReg(4) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D)
	OR (numLeftReg(1) AND numLeftReg(0) AND NOT numRightReg(4) AND 
	numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D)
	OR (NOT numLeftReg(1) AND numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D)
	OR (NOT numLeftReg(1) AND NOT numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D)
	OR (NOT numLeftReg(1) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D)
	OR (NOT numLeftReg(1) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D)
	OR (numLeftReg(1) AND numRightReg(4) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D)
	OR (numLeftReg(1) AND numLeftReg(0) AND numRightReg(4) AND 
	numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0004(2)__xor0000_D));


mul/Mmult_out_mult0002_Mxor__n0008(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0008(1)__xor0000_D <= (numLeftReg(1) AND numRightReg(5))
	 XOR 
mul/Mmult_out_mult0002_Mxor__n0008(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0008(1)__xor0000_D <= ((NOT numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_)
	OR (numLeftReg(2) AND numRightReg(4) AND 
	mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_)
	OR (numLeftReg(2) AND numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_)
	OR (NOT numLeftReg(2) AND 
	mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_)
	OR (NOT numLeftReg(2) AND 
	NOT mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_)
	OR (NOT numRightReg(4) AND 
	mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_));


mul/Mmult_out_mult0002_Mxor__n0008(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0008(2)__xor0000_D <= (numLeftReg(2) AND numRightReg(5))
	 XOR 
mul/Mmult_out_mult0002_Mxor__n0008(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0008(2)__xor0000_D <= ((NOT numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002__or0019/mul/Mmult_out_mult0002__or0019_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0020/mul/Mmult_out_mult0002_Mxor__index0020_D19_)
	OR (numLeftReg(3) AND numRightReg(4) AND 
	mul/Mmult_out_mult0002__or0019/mul/Mmult_out_mult0002__or0019_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0020/mul/Mmult_out_mult0002_Mxor__index0020_D19_)
	OR (numLeftReg(3) AND numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002__or0019/mul/Mmult_out_mult0002__or0019_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0020/mul/Mmult_out_mult0002_Mxor__index0020_D19_)
	OR (NOT numLeftReg(3) AND 
	mul/Mmult_out_mult0002__or0019/mul/Mmult_out_mult0002__or0019_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0020/mul/Mmult_out_mult0002_Mxor__index0020_D19_)
	OR (NOT numLeftReg(3) AND 
	NOT mul/Mmult_out_mult0002__or0019/mul/Mmult_out_mult0002__or0019_D2 AND 
	mul/Mmult_out_mult0002_Mxor__index0020/mul/Mmult_out_mult0002_Mxor__index0020_D19_)
	OR (NOT numRightReg(4) AND 
	mul/Mmult_out_mult0002__or0019/mul/Mmult_out_mult0002__or0019_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0020/mul/Mmult_out_mult0002_Mxor__index0020_D19_));


mul/Mmult_out_mult0002_Mxor__n0010(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0010(1)__xor0000_D <= (numLeftReg(1) AND numRightReg(6))
	 XOR 
mul/Mmult_out_mult0002_Mxor__n0010(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0010(1)__xor0000_D <= ((
	mul/Mmult_out_mult0002_Mxor__n0008(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0008(2)__xor0000_D AND 
	NOT mul/Mmult_out_mult0002__or0024/mul/Mmult_out_mult0002__or0024_D2)
	OR (
	NOT mul/Mmult_out_mult0002_Mxor__n0008(2)__xor0000/mul/Mmult_out_mult0002_Mxor__n0008(2)__xor0000_D AND 
	mul/Mmult_out_mult0002__or0024/mul/Mmult_out_mult0002__or0024_D2));


mul/Mmult_out_mult0002__and0014/mul/Mmult_out_mult0002__and0014_D2 <= (numRightReg(1) AND numLeftReg(1));


mul/Mmult_out_mult0002__and0022/mul/Mmult_out_mult0002__and0022_D2 <= (numRightReg(2) AND numLeftReg(2));


mul/Mmult_out_mult0002__and0024/mul/Mmult_out_mult0002__and0024_D2 <= (numRightReg(2) AND numLeftReg(0));


mul/Mmult_out_mult0002__and0033/mul/Mmult_out_mult0002__and0033_D2 <= (numLeftReg(0) AND numRightReg(3));


mul/Mmult_out_mult0002__and0042/mul/Mmult_out_mult0002__and0042_D2 <= (numLeftReg(0) AND numRightReg(4));


mul/Mmult_out_mult0002__and0051/mul/Mmult_out_mult0002__and0051_D2 <= (numLeftReg(0) AND numRightReg(5));


mul/Mmult_out_mult0002__and0060/mul/Mmult_out_mult0002__and0060_D2 <= (numLeftReg(0) AND numRightReg(6));


mul/Mmult_out_mult0002__or0006/mul/Mmult_out_mult0002__or0006_D2 <= ((
	mul/Mmult_out_mult0002_Mxor__index0001/mul/Mmult_out_mult0002_Mxor__index0001_D.EXP)
	OR (numRightReg(1) AND NOT numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(1) AND numLeftReg(2))
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(1) AND 
	NOT numLeftReg(3) AND numLeftReg(0))
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(2) AND numLeftReg(0))
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(3) AND NOT numLeftReg(0))
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(2) AND NOT numLeftReg(3) AND numLeftReg(0))
	OR (numRightReg(1) AND NOT numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(1) AND numLeftReg(0)));


mul/Mmult_out_mult0002__or0008/mul/Mmult_out_mult0002__or0008_D2 <= (($OpTx$FX_DC$2986.EXP)
	OR (numRightReg(1) AND NOT numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(4) AND numLeftReg(3))
	OR (numRightReg(1) AND NOT numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(2) AND numLeftReg(3))
	OR (NOT numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(3) AND numLeftReg(5))
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(4) AND 
	numLeftReg(2) AND numLeftReg(3))
	OR (numRightReg(1) AND NOT numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(1) AND numLeftReg(3) AND numLeftReg(0))
	OR (
	mul/Mmult_out_mult0002_Mxor__index0005/mul/Mmult_out_mult0002_Mxor__index0005_D.EXP)
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(4) AND 
	numLeftReg(3) AND numLeftReg(5))
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(2) AND 
	numLeftReg(3) AND NOT numLeftReg(5))
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(2) AND numLeftReg(3))
	OR (numRightReg(0) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(2) AND numLeftReg(3) AND numLeftReg(5))
	OR (numRightReg(0) AND numRightReg(2) AND NOT numLeftReg(2) AND 
	numLeftReg(3) AND NOT numLeftReg(0) AND numLeftReg(5))
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(2) AND numLeftReg(0) AND numLeftReg(5))
	OR (numRightReg(0) AND numRightReg(2) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND NOT numLeftReg(5))
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(4) AND NOT numLeftReg(1) AND numLeftReg(2) AND NOT numLeftReg(5))
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	NOT numLeftReg(4) AND numLeftReg(1) AND numLeftReg(2) AND numLeftReg(5))
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	NOT numLeftReg(4) AND numLeftReg(1) AND numLeftReg(3) AND NOT numLeftReg(5)));


mul/Mmult_out_mult0002__or0013/mul/Mmult_out_mult0002__or0013_D2 <= ((EXP74_.EXP)
	OR (numLeftReg(2) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(1) AND numLeftReg(2) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D)
	OR (numLeftReg(1) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numRightReg(0) AND numLeftReg(3) AND numLeftReg(0) AND 
	numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (NOT numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(2) AND NOT numLeftReg(3) AND numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D)
	OR (numRightReg(1) AND NOT numRightReg(0) AND numLeftReg(1) AND 
	numLeftReg(2) AND numLeftReg(0) AND numRightReg(3))
	OR (numRightReg(1) AND NOT numRightReg(0) AND numLeftReg(2) AND 
	numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D)
	OR (numRightReg(0) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND numRightReg(3))
	OR (NOT numRightReg(1) AND NOT numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(1) AND numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (NOT numRightReg(1) AND numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(2) AND numLeftReg(3) AND numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D)
	OR (NOT numRightReg(0) AND numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(2) AND numLeftReg(0) AND numRightReg(3))
	OR (numRightReg(1) AND numRightReg(2) AND numLeftReg(2) AND 
	numLeftReg(3) AND numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D)
	OR (numRightReg(1) AND NOT numRightReg(2) AND numLeftReg(2) AND 
	NOT numLeftReg(3) AND numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D)
	OR (NOT numRightReg(1) AND numRightReg(2) AND numLeftReg(1) AND 
	NOT numLeftReg(3) AND numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numRightReg(1) AND numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(1) AND NOT numLeftReg(3) AND numLeftReg(0) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D));


mul/Mmult_out_mult0002__or0018/mul/Mmult_out_mult0002__or0018_D2 <= ((numLeftReg(1) AND numLeftReg(0) AND numRightReg(4) AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D)
	OR (numLeftReg(1) AND numLeftReg(2) AND numRightReg(4) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(0) AND numRightReg(4) AND NOT numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(1) AND numLeftReg(2) AND numLeftReg(0) AND 
	numRightReg(4) AND 
	mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(1) AND NOT numLeftReg(2) AND numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (EXP83_.EXP)
	OR (numLeftReg(1) AND NOT numLeftReg(2) AND NOT numLeftReg(0) AND 
	numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(1) AND NOT numLeftReg(2) AND numRightReg(4) AND 
	numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(1) AND numLeftReg(2) AND NOT numLeftReg(0) AND 
	numRightReg(4) AND numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(1) AND numLeftReg(2) AND numRightReg(4) AND 
	numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(1) AND NOT numLeftReg(2) AND numLeftReg(0) AND 
	numRightReg(4) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(1) AND numRightReg(4) AND NOT numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (NOT numLeftReg(2) AND numLeftReg(0) AND numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (NOT numLeftReg(2) AND numLeftReg(0) AND numRightReg(4) AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(2) AND numLeftReg(0) AND numRightReg(4) AND 
	numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(2) AND numLeftReg(0) AND numRightReg(4) AND 
	numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D));


mul/Mmult_out_mult0002__or0019/mul/Mmult_out_mult0002__or0019_D2 <= ((
	twoComp/Madd_out__and0002/twoComp/Madd_out__and0002_D2.EXP)
	OR (numLeftReg(2) AND numRightReg(4) AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D)
	OR (numLeftReg(1) AND NOT numLeftReg(0) AND numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D)
	OR (numLeftReg(1) AND numRightReg(4) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D)
	OR (numLeftReg(0) AND numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D)
	OR (numLeftReg(0) AND numRightReg(4) AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D)
	OR (EXP88_.EXP)
	OR (numLeftReg(1) AND numLeftReg(2) AND numLeftReg(0) AND 
	numRightReg(4) AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D)
	OR (numLeftReg(1) AND numLeftReg(2) AND numRightReg(4) AND 
	NOT numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(1) AND numLeftReg(2) AND numRightReg(4) AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(1) AND numLeftReg(0) AND numRightReg(4) AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D)
	OR (numLeftReg(1) AND numRightReg(4) AND NOT numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D)
	OR (numLeftReg(1) AND numRightReg(4) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D)
	OR (numLeftReg(1) AND numLeftReg(0) AND numRightReg(4) AND 
	numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D)
	OR (numLeftReg(2) AND numLeftReg(0) AND numRightReg(4) AND 
	numRightReg(3) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(2) AND numLeftReg(0) AND numRightReg(4) AND 
	numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D)
	OR (numLeftReg(0) AND numRightReg(4) AND numRightReg(3) AND 
	mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	mul/Mmult_out_mult0002_Mxor__index0010/mul/Mmult_out_mult0002_Mxor__index0010_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0011/mul/Mmult_out_mult0002_Mxor__index0011_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D));


mul/Mmult_out_mult0002__or0024/mul/Mmult_out_mult0002__or0024_D2 <= ((EXP89_.EXP)
	OR (numLeftReg(1) AND NOT numRightReg(4) AND numRightReg(5) AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_)
	OR (numLeftReg(0) AND NOT numRightReg(4) AND numRightReg(5) AND 
	mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_)
	OR (numLeftReg(1) AND NOT numLeftReg(2) AND numLeftReg(0) AND 
	numRightReg(5) AND 
	mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_)
	OR (numLeftReg(1) AND numLeftReg(0) AND numRightReg(4) AND 
	numRightReg(5) AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000_D)
	OR (NOT numLeftReg(2) AND numLeftReg(0) AND numRightReg(5) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_)
	OR (numLeftReg(1) AND NOT numLeftReg(2) AND NOT numLeftReg(0) AND 
	numRightReg(5) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0018/mul/Mmult_out_mult0002_Mxor__index0018_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_)
	OR (numLeftReg(1) AND NOT numLeftReg(2) AND numRightReg(4) AND 
	numRightReg(5) AND 
	mul/Mmult_out_mult0002_Mxor__index0018/mul/Mmult_out_mult0002_Mxor__index0018_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_)
	OR (numLeftReg(1) AND numLeftReg(2) AND NOT numLeftReg(0) AND 
	numRightReg(4) AND numRightReg(5) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0018/mul/Mmult_out_mult0002_Mxor__index0018_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_)
	OR (numLeftReg(2) AND numLeftReg(0) AND numRightReg(4) AND 
	numRightReg(5) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_)
	OR (numLeftReg(2) AND numLeftReg(0) AND numRightReg(4) AND 
	numRightReg(5) AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000_D AND 
	mul/Mmult_out_mult0002_Mxor__index0018/mul/Mmult_out_mult0002_Mxor__index0018_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_)
	OR (numLeftReg(1) AND numLeftReg(2) AND numRightReg(5) AND 
	mul/Mmult_out_mult0002_Mxor__index0018/mul/Mmult_out_mult0002_Mxor__index0018_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_)
	OR (numLeftReg(1) AND numLeftReg(0) AND NOT numRightReg(4) AND 
	numRightReg(5) AND 
	mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000_D)
	OR (numLeftReg(1) AND numLeftReg(2) AND numLeftReg(0) AND 
	numRightReg(5) AND 
	mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_)
	OR (numLeftReg(1) AND NOT numLeftReg(2) AND numRightReg(5) AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0018/mul/Mmult_out_mult0002_Mxor__index0018_D AND 
	mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_)
	OR (numLeftReg(1) AND numLeftReg(2) AND numRightReg(4) AND 
	numRightReg(5) AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0006(1)__xor0000_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0018/mul/Mmult_out_mult0002_Mxor__index0018_D AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0019/mul/Mmult_out_mult0002_Mxor__index0019_D20_25_));

FDCPE_numLeftReg0: FDCPE port map (numLeftReg(0),numLeft(0),clkNumLeft,'0','0');

FDCPE_numLeftReg1: FDCPE port map (numLeftReg(1),numLeft(1),clkNumLeft,'0','0');

FDCPE_numLeftReg2: FDCPE port map (numLeftReg(2),numLeft(2),clkNumLeft,'0','0');

FDCPE_numLeftReg3: FDCPE port map (numLeftReg(3),numLeft(3),clkNumLeft,'0','0');

FDCPE_numLeftReg4: FDCPE port map (numLeftReg(4),numLeft(4),clkNumLeft,'0','0');

FDCPE_numLeftReg5: FDCPE port map (numLeftReg(5),numLeft(5),clkNumLeft,'0','0');

FDCPE_numLeftReg6: FDCPE port map (numLeftReg(6),numLeft(6),clkNumLeft,'0','0');

FDCPE_numLeftReg7: FDCPE port map (numLeftReg(7),numLeft(7),clkNumLeft,'0','0');

FDCPE_numRightReg0: FDCPE port map (numRightReg(0),numRight(0),clkNumRight,'0','0');

FDCPE_numRightReg1: FDCPE port map (numRightReg(1),numRight(1),clkNumRight,'0','0');

FDCPE_numRightReg2: FDCPE port map (numRightReg(2),numRight(2),clkNumRight,'0','0');

FDCPE_numRightReg3: FDCPE port map (numRightReg(3),numRight(3),clkNumRight,'0','0');

FDCPE_numRightReg4: FDCPE port map (numRightReg(4),numRight(4),clkNumRight,'0','0');

FDCPE_numRightReg5: FDCPE port map (numRightReg(5),numRight(5),clkNumRight,'0','0');

FDCPE_numRightReg6: FDCPE port map (numRightReg(6),numRight(6),clkNumRight,'0','0');

FDCPE_numRightReg7: FDCPE port map (numRightReg(7),numRight(7),clkNumRight,'0','0');

FDCPE_opChooseReg0: FDCPE port map (opChooseReg(0),opChoose(0),clkOpChoose,'0','0');

FDCPE_opChooseReg1: FDCPE port map (opChooseReg(1),opChoose(1),clkOpChoose,'0','0');

FDCPE_opChooseReg2: FDCPE port map (opChooseReg(2),opChoose(2),clkOpChoose,'0','0');

FDCPE_opChooseReg3: FDCPE port map (opChooseReg(3),opChoose(3),clkOpChoose,'0','0');

FDCPE_opChooseReg4: FDCPE port map (opChooseReg(4),opChoose(4),clkOpChoose,'0','0');

FDCPE_opChooseReg5: FDCPE port map (opChooseReg(5),opChoose(5),clkOpChoose,'0','0');

FDCPE_opChooseReg6: FDCPE port map (opChooseReg(6),opChoose(6),clkOpChoose,'0','0');

FDCPE_opChooseReg7: FDCPE port map (opChooseReg(7),opChoose(7),clkOpChoose,'0','0');


result(0) <= ((EXP18_.EXP)
	OR (numRightReg(0) AND numLeftReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numRightReg(0) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT opChooseReg(0) AND opChooseReg(1) AND opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND NOT $OpTx$$OpTx$FX_DC$2997_INV$3753)
	OR (NOT opChooseReg(0) AND opChooseReg(1) AND opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND NOT $OpTx$$OpTx$FX_DC$2964_INV$3750)
	OR (NOT opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND resultShiftR(0)/resultShiftR(0)_D2)
	OR (EXP21_.EXP)
	OR (numLeftReg(7) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT opChooseReg(0) AND opChooseReg(1) AND opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND NOT $OpTx$$OpTx$FX_DC$2936_INV$3745)
	OR (NOT opChooseReg(0) AND opChooseReg(1) AND opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND NOT $OpTx$$OpTx$FX_DC$2935_INV$3744)
	OR (NOT opChooseReg(0) AND opChooseReg(1) AND opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND NOT $OpTx$$OpTx$FX_DC$2934_INV$3743)
	OR (NOT opChooseReg(0) AND NOT opChooseReg(1) AND opChooseReg(2) AND 
	opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND NOT $OpTx$resultBigger(0)/resultBigger(0)_D2_INV$3755)
	OR (NOT opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(3) AND 
	NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT $OpTx$$OpTx$FX_DC$2902_INV$3729)
	OR (NOT opChooseReg(1) AND NOT opChooseReg(2) AND NOT opChooseReg(3) AND 
	NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT $OpTx$$OpTx$FX_DC$2902_INV$3729)
	OR (numLeftReg(0) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numLeftReg(0) AND NOT opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT numLeftReg(0) AND opChooseReg(0) AND opChooseReg(1) AND 
	opChooseReg(2) AND opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7)));


result(1) <= ((EXP29_.EXP)
	OR (numRightReg(1) AND numLeftReg(1) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numRightReg(1) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numLeftReg(6) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numLeftReg(1) AND NOT numLeftReg(0) AND NOT opChooseReg(0) AND 
	opChooseReg(1) AND NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND 
	NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT numLeftReg(1) AND numLeftReg(0) AND NOT opChooseReg(0) AND 
	opChooseReg(1) AND NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND 
	NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (EXP24_.EXP)
	OR (numLeftReg(0) AND opChooseReg(0) AND NOT opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND $OpTx$$OpTx$FX_DC$2914_INV$3735)
	OR (numRightReg(1) AND NOT numLeftReg(1) AND numLeftReg(0) AND 
	opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND NOT opChooseReg(3) AND 
	opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numRightReg(0) AND numLeftReg(1) AND NOT numLeftReg(0) AND 
	opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND NOT opChooseReg(3) AND 
	opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numRightReg(0) AND numLeftReg(0) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(1) AND NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND 
	NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT $OpTx$$OpTx$FX_DC$2914_INV$3735)
	OR (numRightReg(0) AND NOT numLeftReg(0) AND opChooseReg(0) AND 
	NOT opChooseReg(1) AND NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND 
	NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT $OpTx$$OpTx$FX_DC$2914_INV$3735)
	OR (numLeftReg(1) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7))
	OR (NOT numRightReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND $OpTx$$OpTx$FX_DC$2914_INV$3735)
	OR (NOT numLeftReg(1) AND opChooseReg(0) AND opChooseReg(1) AND 
	opChooseReg(2) AND opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT numLeftReg(0) AND NOT opChooseReg(0) AND NOT opChooseReg(1) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND $OpTx$$OpTx$FX_DC$2914_INV$3735)
	OR (NOT opChooseReg(0) AND NOT opChooseReg(1) AND opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND $OpTx$$OpTx$FX_DC$2914_INV$3735));


result(2) <= ((EXP118_.EXP)
	OR (numLeftReg(5) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	mul/Mmult_out_mult0002_Mxor__index0001/mul/Mmult_out_mult0002_Mxor__index0001_D AND 
	NOT mul/Mmult_out_mult0002__and0024/mul/Mmult_out_mult0002__and0024_D2)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0001/mul/Mmult_out_mult0002_Mxor__index0001_D AND 
	mul/Mmult_out_mult0002__and0024/mul/Mmult_out_mult0002__and0024_D2)
	OR (NOT opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND $OpTx$$OpTx$FX_DC$2968_INV$3752 AND 
	mul/Mmult_out_mult0002__and0014/mul/Mmult_out_mult0002__and0014_D2)
	OR (NOT opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(3) AND 
	NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT $OpTx$$OpTx$FX_DC$2968_INV$3752 AND NOT add/Madd_out__and0000/add/Madd_out__and0000_D2 AND 
	NOT mul/Mmult_out_mult0002__and0014/mul/Mmult_out_mult0002__and0014_D2)
	OR (EXP121_.EXP)
	OR (numLeftReg(2) AND NOT opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	twoComp/Madd_out__and0000/twoComp/Madd_out__and0000_D2)
	OR (NOT numLeftReg(2) AND NOT opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT twoComp/Madd_out__and0000/twoComp/Madd_out__and0000_D2)
	OR (opChooseReg(0) AND NOT opChooseReg(2) AND NOT opChooseReg(3) AND 
	NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT $OpTx$$OpTx$FX_DC$2940_INV$3747 AND 
	NOT mul/Mmult_out_mult0002__and0022/mul/Mmult_out_mult0002__and0022_D2 AND $OpTx$$OpTx$FX_DC$2927_INV$3740)
	OR (NOT opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(3) AND 
	NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT $OpTx$$OpTx$FX_DC$2968_INV$3752 AND $OpTx$$OpTx$FX_DC$2938_INV$3746 AND 
	NOT mul/Mmult_out_mult0002__and0014/mul/Mmult_out_mult0002__and0014_D2)
	OR (numRightReg(1) AND NOT numRightReg(2) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(1) AND NOT opChooseReg(2) AND opChooseReg(3) AND NOT opChooseReg(4) AND 
	NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	$OpTx$FX_DC$2929)
	OR (numLeftReg(2) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND $OpTx$FX_DC$2987)
	OR (NOT numLeftReg(2) AND opChooseReg(0) AND opChooseReg(1) AND 
	opChooseReg(2) AND opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (opChooseReg(0) AND opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND NOT $OpTx$$OpTx$FX_DC$2940_INV$3747)
	OR (NOT opChooseReg(0) AND opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	mul/Mmult_out_mult0002__and0022/mul/Mmult_out_mult0002__and0022_D2)
	OR (NOT opChooseReg(0) AND NOT opChooseReg(1) AND opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND NOT $OpTx$$OpTx$FX_DC$2968_INV$3752));


result(3) <= ((EXP122_.EXP)
	OR (numRightReg(3) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	NOT mul/Mmult_out_mult0002__and0033/mul/Mmult_out_mult0002__and0033_D2)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0009/mul/Mmult_out_mult0002_Mxor__index0009_D AND 
	mul/Mmult_out_mult0002__and0033/mul/Mmult_out_mult0002__and0033_D2)
	OR (NOT opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	mul/Mmult_out_mult0002__and0022/mul/Mmult_out_mult0002__and0022_D2 AND $OpTx$$OpTx$FX_DC$2922_INV$3739)
	OR (NOT opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(3) AND 
	NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	$OpTx$$OpTx$FX_DC$2940_INV$3747 AND 
	NOT mul/Mmult_out_mult0002__and0022/mul/Mmult_out_mult0002__and0022_D2 AND NOT $OpTx$$OpTx$FX_DC$2922_INV$3739)
	OR (EXP125_.EXP)
	OR (numLeftReg(3) AND NOT opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	twoComp/Madd_out__and0001/twoComp/Madd_out__and0001_D2)
	OR (NOT numLeftReg(3) AND NOT opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT twoComp/Madd_out__and0001/twoComp/Madd_out__and0001_D2)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND $OpTx$$OpTx$FX_DC$2922_INV$3739 AND 
	$OpTx$sub/Msub_out__or0002/sub/Msub_out__or0002_D2_INV$3759)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND NOT $OpTx$$OpTx$FX_DC$2922_INV$3739 AND 
	NOT $OpTx$sub/Msub_out__or0002/sub/Msub_out__or0002_D2_INV$3759)
	OR (NOT numRightReg(1) AND NOT numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(3) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND opChooseReg(3) AND 
	NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numLeftReg(3) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7))
	OR (numLeftReg(4) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numLeftReg(3) AND numRightReg(3) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT numLeftReg(3) AND opChooseReg(0) AND opChooseReg(1) AND 
	opChooseReg(2) AND opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT opChooseReg(0) AND NOT opChooseReg(1) AND opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND NOT $OpTx$$OpTx$FX_DC$2922_INV$3739));


result(4) <= ((EXP110_.EXP)
	OR (numRightReg(4) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numLeftReg(4) AND NOT numRightReg(4) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(1) AND opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND 
	NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT numLeftReg(4) AND numRightReg(4) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(1) AND opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND 
	NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	NOT mul/Mmult_out_mult0002__and0042/mul/Mmult_out_mult0002__and0042_D2)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0017/mul/Mmult_out_mult0002_Mxor__index0017_D AND 
	mul/Mmult_out_mult0002__and0042/mul/Mmult_out_mult0002__and0042_D2)
	OR (EXP113_.EXP)
	OR (numLeftReg(4) AND NOT numRightReg(4) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(1) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT add/Madd_out__or0002/add/Madd_out__or0002_D2)
	OR (numLeftReg(4) AND NOT opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	twoComp/Madd_out__and0002/twoComp/Madd_out__and0002_D2)
	OR (NOT numLeftReg(4) AND numRightReg(4) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(1) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT add/Madd_out__or0002/add/Madd_out__or0002_D2)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	sub/Msub_out_Mxor_Result(4)__xor0000/sub/Msub_out_Mxor_Result(4)__xor0000_D AND 
	$OpTx$sub/Msub_out__or0003/sub/Msub_out__or0003_D2_INV$3760)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	NOT sub/Msub_out_Mxor_Result(4)__xor0000/sub/Msub_out_Mxor_Result(4)__xor0000_D AND 
	NOT $OpTx$sub/Msub_out__or0003/sub/Msub_out__or0003_D2_INV$3760)
	OR (numLeftReg(4) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7))
	OR (numLeftReg(4) AND numRightReg(4) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT numLeftReg(4) AND opChooseReg(0) AND opChooseReg(1) AND 
	opChooseReg(2) AND opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numLeftReg(3) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numLeftReg(4) AND numRightReg(4) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	add/Madd_out__or0002/add/Madd_out__or0002_D2));


result(5) <= ((EXP25_.EXP)
	OR (numLeftReg(2) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numLeftReg(5) AND NOT numRightReg(5) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(1) AND opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND 
	NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT numLeftReg(5) AND numRightReg(5) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(1) AND opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND 
	NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	mul/Mmult_out_mult0002_Mxor__index0025/mul/Mmult_out_mult0002_Mxor__index0025_D AND 
	NOT mul/Mmult_out_mult0002__and0051/mul/Mmult_out_mult0002__and0051_D2)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	NOT mul/Mmult_out_mult0002_Mxor__index0025/mul/Mmult_out_mult0002_Mxor__index0025_D AND 
	mul/Mmult_out_mult0002__and0051/mul/Mmult_out_mult0002__and0051_D2)
	OR (EXP28_.EXP)
	OR (numLeftReg(5) AND NOT numRightReg(5) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(1) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT add/Madd_out__or0003/add/Madd_out__or0003_D2)
	OR (numLeftReg(5) AND NOT opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	twoComp/Madd_out__and0003/twoComp/Madd_out__and0003_D2)
	OR (NOT numLeftReg(5) AND numRightReg(5) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(1) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT add/Madd_out__or0003/add/Madd_out__or0003_D2)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	sub/Msub_out_Mxor_Result(5)__xor0000/sub/Msub_out_Mxor_Result(5)__xor0000_D AND NOT sub/Msub_out__or0004/sub/Msub_out__or0004_D2)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	NOT sub/Msub_out_Mxor_Result(5)__xor0000/sub/Msub_out_Mxor_Result(5)__xor0000_D AND sub/Msub_out__or0004/sub/Msub_out__or0004_D2)
	OR (numLeftReg(5) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7))
	OR (numLeftReg(5) AND numRightReg(5) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT numLeftReg(5) AND opChooseReg(0) AND opChooseReg(1) AND 
	opChooseReg(2) AND opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numRightReg(5) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numLeftReg(5) AND numRightReg(5) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	add/Madd_out__or0003/add/Madd_out__or0003_D2));


result(6) <= ((EXP114_.EXP)
	OR (opChooseReg(0) AND opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND NOT $OpTx$$OpTx$FX_DC$2935_INV$3744)
	OR (numLeftReg(6) AND numRightReg(6) AND NOT opChooseReg(0) AND 
	opChooseReg(1) AND NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND 
	NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numLeftReg(6) AND NOT opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	twoComp/Madd_out__and0004/twoComp/Madd_out__and0004_D2)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND $OpTx$$OpTx$FX_DC$2919_INV$3737 AND 
	NOT sub/Msub_out_Mxor_Result(6)__xor0000/sub/Msub_out_Mxor_Result(6)__xor0000_D)
	OR (NOT opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND $OpTx$$OpTx$FX_DC$2967_INV$3751 AND 
	add/Madd_out__or0004/add/Madd_out__or0004_D2)
	OR (EXP117_.EXP)
	OR (numRightReg(0) AND opChooseReg(0) AND NOT opChooseReg(1) AND 
	NOT opChooseReg(2) AND opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND $OpTx$FX_DC$2986)
	OR (NOT numRightReg(0) AND opChooseReg(0) AND NOT opChooseReg(1) AND 
	NOT opChooseReg(2) AND opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND $OpTx$FX_DC$2961)
	OR (NOT numLeftReg(6) AND NOT opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT twoComp/Madd_out__and0004/twoComp/Madd_out__and0004_D2)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	NOT mul/Mmult_out_mult0002__and0051/mul/Mmult_out_mult0002__and0051_D2 AND 
	mul/Mmult_out_mult0002_Mxor__n0008(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0008(1)__xor0000_D AND 
	NOT mul/Mmult_out_mult0002__and0060/mul/Mmult_out_mult0002__and0060_D2)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	NOT mul/Mmult_out_mult0002__and0051/mul/Mmult_out_mult0002__and0051_D2 AND 
	NOT mul/Mmult_out_mult0002_Mxor__n0008(1)__xor0000/mul/Mmult_out_mult0002_Mxor__n0008(1)__xor0000_D AND 
	mul/Mmult_out_mult0002__and0060/mul/Mmult_out_mult0002__and0060_D2)
	OR (numLeftReg(6) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND $OpTx$FX_DC$2987)
	OR (NOT numLeftReg(6) AND opChooseReg(0) AND opChooseReg(1) AND 
	opChooseReg(2) AND opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numLeftReg(1) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT opChooseReg(0) AND NOT opChooseReg(1) AND opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND NOT $OpTx$$OpTx$FX_DC$2967_INV$3751)
	OR (NOT opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(3) AND 
	NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT $OpTx$$OpTx$FX_DC$2967_INV$3751 AND NOT add/Madd_out__or0004/add/Madd_out__or0004_D2));


result(7) <= ((
	$OpTx$sub/Msub_out__or0000/sub/Msub_out__or0000_D2_INV$3758.EXP)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND resultShiftL(7)/resultShiftL(7)_D2)
	OR (numLeftReg(7) AND numRightReg(7) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	add/Madd_out__or0005/add/Madd_out__or0005_D2)
	OR (numLeftReg(7) AND NOT numRightReg(7) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(1) AND opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND 
	NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT numLeftReg(7) AND numRightReg(7) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(1) AND opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND 
	NOT opChooseReg(5) AND NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT numLeftReg(7) AND numRightReg(7) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(1) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT add/Madd_out__or0005/add/Madd_out__or0005_D2)
	OR (
	mul/Mmult_out_mult0002__and0024/mul/Mmult_out_mult0002__and0024_D2.EXP)
	OR (numLeftReg(7) AND NOT numRightReg(7) AND NOT opChooseReg(0) AND 
	NOT opChooseReg(1) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT add/Madd_out__or0005/add/Madd_out__or0005_D2)
	OR (numLeftReg(7) AND NOT opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	twoComp/Madd_out__and0005/twoComp/Madd_out__and0005_D2)
	OR (NOT numLeftReg(7) AND NOT opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7) AND 
	NOT twoComp/Madd_out__and0005/twoComp/Madd_out__and0005_D2)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	sub/Msub_out_Mxor_Result(7)__xor0000/sub/Msub_out_Mxor_Result(7)__xor0000_D AND 
	$OpTx$sub/Msub_out__or0006/sub/Msub_out__or0006_D2_INV$3761)
	OR (opChooseReg(0) AND NOT opChooseReg(1) AND NOT opChooseReg(2) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7) AND 
	NOT sub/Msub_out_Mxor_Result(7)__xor0000/sub/Msub_out_Mxor_Result(7)__xor0000_D AND 
	NOT $OpTx$sub/Msub_out__or0006/sub/Msub_out__or0006_D2_INV$3761)
	OR (numLeftReg(7) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND NOT opChooseReg(6) AND 
	NOT opChooseReg(7))
	OR (numLeftReg(0) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numLeftReg(7) AND numRightReg(7) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (NOT numLeftReg(7) AND opChooseReg(0) AND opChooseReg(1) AND 
	opChooseReg(2) AND opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7))
	OR (numRightReg(7) AND opChooseReg(0) AND opChooseReg(1) AND 
	NOT opChooseReg(2) AND NOT opChooseReg(3) AND NOT opChooseReg(4) AND NOT opChooseReg(5) AND 
	NOT opChooseReg(6) AND NOT opChooseReg(7)));


resultShiftL(7)/resultShiftL(7)_D2 <= ((andNB/out_and0001/andNB/out_and0001_D2.EXP)
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(0))
	OR (numRightReg(1) AND numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(4))
	OR (numRightReg(1) AND NOT numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(1))
	OR (NOT numRightReg(1) AND NOT numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(3))
	OR (NOT numRightReg(1) AND NOT numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(7))
	OR (numRightReg(1) AND NOT numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(5))
	OR (NOT numRightReg(1) AND numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(6)));


resultShiftR(0)/resultShiftR(0)_D2 <= ((EXP43_.EXP)
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(7))
	OR (numRightReg(1) AND numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(3))
	OR (numRightReg(1) AND NOT numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(6))
	OR (numRightReg(1) AND NOT numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(2))
	OR (NOT numRightReg(1) AND NOT numRightReg(0) AND numRightReg(2) AND 
	numLeftReg(4))
	OR (NOT numRightReg(1) AND numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(1)));


resultSmaller(0)/resultSmaller(0)_D2 <= ((EXP37_.EXP)
	OR (numRightReg(2) AND NOT numLeftReg(2) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737 AND 
	NOT $OpTx$$OpTx$FX_DC$2931_INV$3742)
	OR (numRightReg(1) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737 AND 
	NOT $OpTx$$OpTx$FX_DC$2931_INV$3742)
	OR (numRightReg(1) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737 AND 
	NOT $OpTx$$OpTx$FX_DC$2931_INV$3742)
	OR (numRightReg(0) AND numRightReg(2) AND NOT numLeftReg(1) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737 AND 
	NOT $OpTx$$OpTx$FX_DC$2931_INV$3742)
	OR (numRightReg(0) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737 AND 
	NOT $OpTx$$OpTx$FX_DC$2931_INV$3742)
	OR (numRightReg(1) AND numRightReg(0) AND numRightReg(2) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737 AND 
	NOT $OpTx$$OpTx$FX_DC$2931_INV$3742)
	OR (numRightReg(1) AND numRightReg(0) AND NOT numLeftReg(2) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737 AND 
	NOT $OpTx$$OpTx$FX_DC$2931_INV$3742)
	OR (numRightReg(1) AND NOT numLeftReg(2) AND NOT numLeftReg(0) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737 AND 
	NOT $OpTx$$OpTx$FX_DC$2931_INV$3742)
	OR (numRightReg(2) AND NOT numLeftReg(1) AND NOT numLeftReg(0) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737 AND 
	NOT $OpTx$$OpTx$FX_DC$2931_INV$3742)
	OR (NOT numLeftReg(1) AND NOT numLeftReg(2) AND NOT numLeftReg(0) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737 AND 
	NOT $OpTx$$OpTx$FX_DC$2931_INV$3742)
	OR (NOT numLeftReg(7) AND numRightReg(7))
	OR (NOT numLeftReg(6) AND numRightReg(6) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733)
	OR (NOT numLeftReg(5) AND numRightReg(5) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728)
	OR (NOT numLeftReg(4) AND numRightReg(4) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND 
	NOT $OpTx$$OpTx$FX_DC$2919_INV$3737)
	OR (NOT numLeftReg(3) AND numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2910_INV$3733 AND NOT $OpTx$$OpTx$FX_DC$2909_INV$3732 AND 
	NOT $OpTx$$OpTx$FX_DC$2900_INV$3728 AND NOT $OpTx$$OpTx$FX_DC$2919_INV$3737));


sub/Msub_out_Mxor_Result(4)__xor0000/sub/Msub_out_Mxor_Result(4)__xor0000_D <= NOT (numLeftReg(4)
	 XOR 
sub/Msub_out_Mxor_Result(4)__xor0000/sub/Msub_out_Mxor_Result(4)__xor0000_D <= NOT (numRightReg(4));


sub/Msub_out_Mxor_Result(5)__xor0000/sub/Msub_out_Mxor_Result(5)__xor0000_D <= NOT (numLeftReg(5)
	 XOR 
sub/Msub_out_Mxor_Result(5)__xor0000/sub/Msub_out_Mxor_Result(5)__xor0000_D <= NOT (numRightReg(5));


sub/Msub_out_Mxor_Result(6)__xor0000/sub/Msub_out_Mxor_Result(6)__xor0000_D <= NOT (numLeftReg(6)
	 XOR 
sub/Msub_out_Mxor_Result(6)__xor0000/sub/Msub_out_Mxor_Result(6)__xor0000_D <= NOT (numRightReg(6));


sub/Msub_out_Mxor_Result(7)__xor0000/sub/Msub_out_Mxor_Result(7)__xor0000_D <= NOT (numLeftReg(7)
	 XOR 
sub/Msub_out_Mxor_Result(7)__xor0000/sub/Msub_out_Mxor_Result(7)__xor0000_D <= NOT (numRightReg(7));


sub/Msub_out__or0004/sub/Msub_out__or0004_D2 <= ((EXP52_.EXP)
	OR (NOT numRightReg(1) AND NOT numRightReg(0) AND NOT numRightReg(2) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731)
	OR (NOT numRightReg(1) AND NOT numRightReg(0) AND numLeftReg(2) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731)
	OR (NOT numRightReg(1) AND NOT numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731)
	OR (NOT numRightReg(0) AND NOT numRightReg(2) AND numLeftReg(1) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731)
	OR (NOT numRightReg(0) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731)
	OR (resultShiftR(0)/resultShiftR(0)_D2.EXP)
	OR (NOT numRightReg(1) AND NOT numRightReg(2) AND numLeftReg(3) AND 
	numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731)
	OR (NOT numRightReg(1) AND numLeftReg(1) AND numLeftReg(2) AND 
	NOT numRightReg(3) AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731)
	OR (NOT numRightReg(1) AND numLeftReg(2) AND numLeftReg(3) AND 
	numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731)
	OR (NOT numRightReg(2) AND numLeftReg(1) AND numLeftReg(3) AND 
	numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731)
	OR (numLeftReg(1) AND numLeftReg(2) AND numLeftReg(3) AND 
	numLeftReg(0) AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731)
	OR (numLeftReg(4) AND NOT numRightReg(4))
	OR (numLeftReg(3) AND NOT numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2908_INV$3731)
	OR (NOT numRightReg(2) AND numLeftReg(2) AND numLeftReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2908_INV$3731)
	OR (NOT numRightReg(2) AND numLeftReg(2) AND NOT numRightReg(3) AND 
	NOT $OpTx$$OpTx$FX_DC$2908_INV$3731)
	OR (NOT numRightReg(1) AND numLeftReg(1) AND numLeftReg(2) AND 
	numLeftReg(3) AND NOT $OpTx$$OpTx$FX_DC$2908_INV$3731));


twoComp/Madd_out__and0000/twoComp/Madd_out__and0000_D2 <= (NOT numLeftReg(1) AND NOT numLeftReg(0));


twoComp/Madd_out__and0001/twoComp/Madd_out__and0001_D2 <= (NOT numLeftReg(1) AND NOT numLeftReg(2) AND NOT numLeftReg(0));


twoComp/Madd_out__and0002/twoComp/Madd_out__and0002_D2 <= (NOT numLeftReg(1) AND NOT numLeftReg(2) AND NOT numLeftReg(3) AND 
	NOT numLeftReg(0));


twoComp/Madd_out__and0003/twoComp/Madd_out__and0003_D2 <= (NOT numLeftReg(4) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(0));


twoComp/Madd_out__and0004/twoComp/Madd_out__and0004_D2 <= (NOT numLeftReg(4) AND NOT numLeftReg(1) AND NOT numLeftReg(2) AND 
	NOT numLeftReg(3) AND NOT numLeftReg(0) AND NOT numLeftReg(5));


twoComp/Madd_out__and0005/twoComp/Madd_out__and0005_D2 <= (NOT numLeftReg(4) AND NOT numLeftReg(6) AND NOT numLeftReg(1) AND 
	NOT numLeftReg(2) AND NOT numLeftReg(3) AND NOT numLeftReg(0) AND NOT numLeftReg(5));


xorNB/Mxor_out_xor0000__xor0000/xorNB/Mxor_out_xor0000__xor0000_D <= NOT (numRightReg(1)
	 XOR 
xorNB/Mxor_out_xor0000__xor0000/xorNB/Mxor_out_xor0000__xor0000_D <= NOT (((numRightReg(0) AND numRightReg(2) AND NOT numRightReg(3))
	OR (numRightReg(0) AND NOT numRightReg(2) AND numRightReg(3))
	OR (NOT numRightReg(0) AND numRightReg(2) AND numRightReg(3))
	OR (NOT numRightReg(0) AND NOT numRightReg(2) AND NOT numRightReg(3))));


xorNB/Mxor_out_xor0000__xor0001/xorNB/Mxor_out_xor0000__xor0001_D <= NOT (numLeftReg(0)
	 XOR 
xorNB/Mxor_out_xor0000__xor0001/xorNB/Mxor_out_xor0000__xor0001_D <= NOT (((NOT numRightReg(4) AND numRightReg(6) AND numRightReg(5) AND 
	NOT numRightReg(7))
	OR (NOT numRightReg(4) AND numRightReg(6) AND NOT numRightReg(5) AND 
	numRightReg(7))
	OR (NOT numRightReg(4) AND NOT numRightReg(6) AND numRightReg(5) AND 
	numRightReg(7))
	OR (NOT numRightReg(4) AND NOT numRightReg(6) AND NOT numRightReg(5) AND 
	NOT numRightReg(7))
	OR (numRightReg(4) AND numRightReg(6) AND numRightReg(5) AND 
	numRightReg(7))
	OR (numRightReg(4) AND numRightReg(6) AND NOT numRightReg(5) AND 
	NOT numRightReg(7))
	OR (numRightReg(4) AND NOT numRightReg(6) AND numRightReg(5) AND 
	NOT numRightReg(7))
	OR (numRightReg(4) AND NOT numRightReg(6) AND NOT numRightReg(5) AND 
	numRightReg(7))));

Register Legend:
 FDCPE (Q,D,C,CLR,PRE,CE); 
 FTCPE (Q,D,C,CLR,PRE,CE); 
 LDCP  (Q,D,G,CLR,PRE); 

******************************  Device Pin Out *****************************

Device : XC95288XL-6-TQ144


Pin Signal                         Pin Signal                        
No. Name                           No. Name                          
  1 VCC                              73 VCC                           
  2 KPR                              74 KPR                           
  3 KPR                              75 KPR                           
  4 result<7>                        76 KPR                           
  5 KPR                              77 KPR                           
  6 KPR                              78 KPR                           
  7 KPR                              79 KPR                           
  8 VCC                              80 KPR                           
  9 result<1>                        81 result<4>                     
 10 KPR                              82 KPR                           
 11 KPR                              83 KPR                           
 12 KPR                              84 VCC                           
 13 KPR                              85 KPR                           
 14 result<5>                        86 KPR                           
 15 KPR                              87 result<6>                     
 16 KPR                              88 KPR                           
 17 KPR                              89 GND                           
 18 GND                              90 GND                           
 19 KPR                              91 KPR                           
 20 result<0>                        92 KPR                           
 21 KPR                              93 result<2>                     
 22 KPR                              94 KPR                           
 23 KPR                              95 KPR                           
 24 KPR                              96 KPR                           
 25 KPR                              97 KPR                           
 26 KPR                              98 result<3>                     
 27 KPR                              99 GND                           
 28 KPR                             100 KPR                           
 29 GND                             101 KPR                           
 30 clkNumLeft                      102 KPR                           
 31 KPR                             103 KPR                           
 32 clkNumRight                     104 KPR                           
 33 KPR                             105 KPR                           
 34 KPR                             106 KPR                           
 35 KPR                             107 KPR                           
 36 GND                             108 GND                           
 37 VCC                             109 VCC                           
 38 clkOpChoose                     110 KPR                           
 39 KPR                             111 KPR                           
 40 KPR                             112 KPR                           
 41 KPR                             113 opChoose<0>                   
 42 VCC                             114 GND                           
 43 KPR                             115 opChoose<1>                   
 44 KPR                             116 opChoose<2>                   
 45 KPR                             117 opChoose<3>                   
 46 KPR                             118 opChoose<4>                   
 47 GND                             119 opChoose<5>                   
 48 KPR                             120 opChoose<6>                   
 49 KPR                             121 opChoose<7>                   
 50 KPR                             122 TDO                           
 51 KPR                             123 GND                           
 52 KPR                             124 numRight<0>                   
 53 KPR                             125 numRight<1>                   
 54 KPR                             126 numRight<2>                   
 55 VCC                             127 VCC                           
 56 KPR                             128 numRight<3>                   
 57 KPR                             129 numRight<4>                   
 58 KPR                             130 numRight<5>                   
 59 KPR                             131 numRight<6>                   
 60 KPR                             132 numRight<7>                   
 61 KPR                             133 numLeft<0>                    
 62 GND                             134 numLeft<1>                    
 63 TDI                             135 numLeft<2>                    
 64 KPR                             136 numLeft<3>                    
 65 TMS                             137 numLeft<4>                    
 66 KPR                             138 numLeft<5>                    
 67 TCK                             139 numLeft<6>                    
 68 KPR                             140 numLeft<7>                    
 69 KPR                             141 VCC                           
 70 KPR                             142 KPR                           
 71 KPR                             143 KPR                           
 72 GND                             144 GND                           


Legend :  NC  = Not Connected, unbonded pin
         PGND = Unused I/O configured as additional Ground pin
         TIE  = Unused I/O floating -- must tie to VCC, GND or other signal
         KPR  = Unused I/O with weak keeper (leave unconnected)
         VCC  = Dedicated Power Pin
         GND  = Dedicated Ground Pin
         TDI  = Test Data In, JTAG pin
         TDO  = Test Data Out, JTAG pin
         TCK  = Test Clock, JTAG pin
         TMS  = Test Mode Select, JTAG pin
  PROHIBITED  = User reserved pin
****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : xc95288xl-6-TQ144
Optimization Method                         : SPEED
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : OFF
Keep Unused Inputs                          : OFF
Slew Rate                                   : FAST
Power Mode                                  : STD
Ground on Unused IOs                        : OFF
Set I/O Pin Termination                     : KEEPER
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
Input Limit                                 : 54
Pterm Limit                                 : 25
